name: Deployment pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
    types: [opened, synchronize]

jobs:

  validate_and_deploy:

    runs-on: ubuntu-18.04
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Install backend
        run: |
          cd fuel-tracker-be
          npm install

      - name: Create dotenv file for backend
        run: |
          cd fuel-tracker-be
          touch .env
          echo MONGODB_URI="mongodb+srv://${{ secrets.MONGODB_USERNAME }}:${{ secrets.MONGODB_PASSWORD }}@cluster0-nscn5.mongodb.net/${{ secrets.MONGODB_DB_NAME }}?retryWrites=true&w=majority" >> .env
          echo TEST_MONGODB_URI="mongodb+srv://${{ secrets.MONGODB_USERNAME }}:${{ secrets.MONGODB_PASSWORD }}@cluster0-nscn5.mongodb.net/${{ secrets.MONGODB_DB_NAME }}-test?retryWrites=true&w=majority" >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          echo PORT=5001 >> .env

      - name: Lint backend
        run: |
          cd fuel-tracker-be
          npm run lint

      #- name: Run integration tests for backend
      #  run: |
      #    cd fuel-tracker-be
      #    npm run test:quiet

      - name: Install frontend
        run: |
          cd fuel-tracker-fe
          npm install

      - name: Lint frontend
        run: |
          cd fuel-tracker-fe
          npm run lint

      # - name: Make frontend production build for E2E tests
      #  run: |
      #    cd fuel-tracker-be
      #    npm run build:ui
      #- name: Run E2E tests
      #  uses: cypress-io/github-action@v2
      #  with:
      #    working-directory: fuel-tracker-be
      #    start: npm run start:prod
      #    command: npm run test:e2e
      #    wait-on: http://localhost:5001
    
      - name: Prepare deployment package
        if: | # executed only when the change is merged or pushed to master AND commit messages do not contain keyword '#skip'.
          github.event_name == 'push' && 
          !contains(toJSON(github.event.commits.*.message), '#skip')
        run: |
          cd fuel-tracker-be
          npm run deploy:cleanOld
          npm run deploy:prepBE
          npm run deploy:prepFE
      
      # Bump package.json version in deployment package based on
      # definition given in commit messages. Checking order is PATCH ->
      # MINOR -> MAJOR if several tags used. Default (patch) is used
      # if none tag provided. Note that this update IS NOT committed
      # to Github because deployment may still fail. Same update is
      # done in Github later in 'tag_deployment_release' job. 
      - name: Bump package.json version, PATCH
        if: contains(toJSON(github.event.commits.*.message), '[=PATCH=]')
        run: |
          cd web
          npm version patch

      - name: Bump package.json version, MINOR
        if: contains(toJSON(github.event.commits.*.message), '[=MINOR=]')
        run: |
          cd web
          npm version minor

      - name: Bump package.json version, MAJOR
        if: contains(toJSON(github.event.commits.*.message), '[=MAJOR=]')
        run: |
          cd web
          npm version major

      - name: Bump package.json version, DEFAULT (patch)
        if: |
          !contains(toJSON(github.event.commits.*.message), '[=PATCH=]') &&
          !contains(toJSON(github.event.commits.*.message), '[=MINOR=]') &&
          !contains(toJSON(github.event.commits.*.message), '[=MAJOR=]')
        run: |
          cd web
          npm version patch

      - name: Add deployment package in local repository
        if: | # executed only when the change is merged or pushed to master AND commit messages do not contain keyword '#skip'.
          github.event_name == 'push' && 
          !contains(toJSON(github.event.commits.*.message), '#skip')
        run: |
          git config user.email "fta.buildbot@github.com"
          git config user.name "FTA BuildBot"
          git add -A && git commit -m "Deployment to Heroku"

      - name: Deploy to Heroku
        if: | # executed only when the change is merged or pushed to master AND commit messages do not contain keyword '#skip'.
          github.event_name == 'push' && 
          !contains(toJSON(github.event.commits.*.message), '#skip')
        uses: akhileshns/heroku-deploy@bf72a2f486f950d3c6b1be566f8717f998bbce51
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "tankkitutka"
          heroku_email: "mika.honkanen@gmail.com"
          healthcheck: "https://tankkitutka.herokuapp.com/api/health"
          checkstring: "ok"
          rollbackonhealthcheckfailed: true
          appdir: "web"

  tag_deployed_release:

    needs: validate_and_deploy # validate_and_deploy must be successfully completed before creating a new release tag.

    runs-on: ubuntu-18.04
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name:  'Bump version and tag the deployment'
        uses:  'phips28/gh-action-bump-version@master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PACKAGEJSON_DIR:  'fuel-tracker-be'
        with:
          tag-prefix:  'v'
          minor-wording: '[=MINOR=]'
          major-wording: '[=MAJOR=]'
          patch-wording: '[=PATCH=]'
          default: patch