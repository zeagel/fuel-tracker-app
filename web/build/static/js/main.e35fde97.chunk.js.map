{"version":3,"sources":["assets/images/logo-gasoline-pump.png","services/login.js","reducers/notificationReducer.js","services/users.js","services/vehicles.js","services/refuelings.js","reducers/listStateReducer.js","reducers/userReducer.js","reducers/loginReducer.js","reducers/usersReducer.js","reducers/naviReducer.js","reducers/refuelingReducer.js","store.js","components/Notification/Notification.js","components/LoginForm.js","components/NavBar/NavBar.js","components/RegistrationForm/RegistrationForm.js","hooks/index.js","components/RefuelingList/AddRefuelingModal.js","components/RefuelingList/VehicleRow.js","components/RefuelingList/EditRefuelingModal.js","components/RefuelingList/RefuelingList.js","components/MyDetails/VehicleInputBlock.js","components/MyDetails/VehicleCoOwnerList.js","components/MyDetails/VehicleCoOwnersBlock.js","components/MyDetails/AddVehicleModal.js","components/MyDetails/EditVehicleModal.js","components/MyDetails/VehicleList.js","components/MyDetails/ChangePwdModal.js","components/MyDetails/RemoveAccountModal.js","components/MyDetails/MyDetails.js","components/Routes.js","components/App.js","index.js"],"names":["module","exports","token","getToken","login","userObject","a","axios","post","res","data","verifyPwd","config","headers","Authorization","setToken","newToken","decodeToken","jwt_decode","clearAllEarlierTimeouts","highestId","window","setTimeout","i","clearInterval","setNotification","messageObject","dispatch","clearNotification","timeout","type","notification","notificationReducer","state","action","getSimpleUserList","loginService","get","getUserById","user","id","addUser","updateUser","put","removeUser","delete","addVehicle","reqObject","updateVehicle","vehicle","removeVehicle","vehicleId","addRefueling","updateRefueling","refueling","removeRefueling","refuelingId","updateListState","listObject","removeFromListStates","addInListStates","listItemObject","listStateReducer","updatedListStates","map","listItem","filter","push","updateUserVehicle","vehicleService","response","primary","header","undefined","content","name","licensePlateId","userReducer","updatedUser","vehicles","primaryVehicle","entry","odoMeter","refuelings","indexToBeRemoved","findIndex","v","splice","updatedVehicle","find","updatedEntry","vehicleOdoUpdated","removedRefuelingEntry","r","tripKilometers","loginUser","logoutUser","loginReducer","localStorage","setItem","JSON","stringify","location","href","removeItem","usersReducer","setActiveItem","naviReducer","currentPage","getItem","setRefuelingEntry","refuelingReducer","reducer","combineReducers","note","users","navi","listStates","store","createStore","composeWithDevTools","applyMiddleware","thunk","Notification","useSelector","Message","color","className","loginPageLogo","require","LoginForm","props","useState","username","setUsername","password","setPassword","useDispatch","handleSubmitLogin","event","preventDefault","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","Image","src","Form","size","onSubmit","Segment","raised","Input","fluid","icon","iconPosition","placeholder","onChange","target","value","Button","to","onClick","Icon","Content","NavBar","userName","activePage","useEffect","Menu","pointing","secondary","Item","NavLink","position","active","compact","RegistrationForm","postNewUser","fields","resetForm","newUser","userService","initialValues","confirmPassword","validationSchema","Yup","shape","required","matches","min","max","oneOf","errors","touched","status","htmlFor","component","getWindowDimensions","width","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","AddRefuelingModal","modalOpen","setModalOpen","date","setDate","setOdoMeter","liters","setLiters","trip","setTrip","avgConsumption","setAvgConsumption","addEndOfList","setAddEndOfList","text","faultyOdoMeter","setFaultyOdoMeter","faultyLiters","setFaultyLiters","faultyTrip","setFaultyTrip","latestRefueling","setLatestRefueling","length","sort","b","Date","getTime","resetAllStates","handleCancelOnClick","e","handleSaveOnClick","newRefuelingEntry","refuelingService","Modal","closeIcon","onClose","onOpen","open","closeOnDimmerClick","closeOnEscape","trigger","disabled","selected","dateFormat","val","handleDateOnChange","onChangeRaw","maxDate","addDays","concat","onBlur","Number","isInteger","newTrip","toFixed","handleOdoMeterOnBlur","error","isNaN","Actions","positive","VehicleRow","showRefuelingEntries","setShowRefuelingEntries","result","item","getFormattedDateString","toLocaleDateString","year","month","day","getDecimalFormattedValue","handleRowOnClick","listId","RefuelingLabelRow","Row","columns","RefuelingEntryRow","colSpan","index","key","Divider","EditRefuelingModal","refuelingToBeEdited","openRefuelingEntryModal","setOpenRefuelingEntryModal","originalDate","setOriginalDate","originalOdoMeter","setOriginalOdoMeter","originalLiters","setOriginalLiters","originalTrip","setOriginalTrip","openDelRefuelingModal","setOpenDelRefuelingModal","inputErrorMessage","setInputErrorMessage","odoFieldEnabled","setOdoFieldEnabled","latestEntry","setLatestEntry","Object","keys","handleDelConfirmOnClick","RefuelingId","ErrorMessage","showError","userHasEditRightsForEntry","owner","stopPropagation","currentTarget","selectedDate","toISOString","split","dateInEntry","updatedTrip","updatedAvgConsumption","warning","toString","RefuelingList","lists","initListStates","info","OwnedVehicleBlock","foundOwnedVehicles","localeCompare","CoOwnedVehicleBlock","foundCoOwnedVehicles","VehicleInputBlock","label","blockStyle","inputError","VehicleCoOwnerList","coOwners","onClickHandler","delDisabled","coOwnerTags","c","VehicleCoOwnersBlock","coOwner","handleDelCoOwnerOnClick","handleCoOwnerONChange","handleAddCoOwnerOnClick","AddVehicleModal","setOpen","setName","faultyName","setFaultyName","setLicensePlateId","faultyLPId","setFaultyLPId","faultyOdo","setFaultyOdo","setCoOwner","setCoOwners","setPrimaryVehicle","test","Checkbox","updatedCoOwners","coOwnerFound","userFound","u","EditVehicleModal","openEditVehicleModal","setOpenEditVehicleModal","openDelVehicleModal","setOpenDelVehicleModal","showDelConfirmation","setShowDelConfirmation","originalPrimarySelection","setOriginalPrimarySelection","primarySelection","setPrimarySelection","checked","VehicleList","ChangePwdModal","openModal","setOpenModal","currentPwd","setCurrentPwd","newPwd","setNewPwd","confirmPwd","setConfirmPwd","RemoveAccountModal","actionButtonsDisabled","setActionButtonDisabled","MyDetails","console","log","Routes","loggedUserJSON","parse","path","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e35fde97.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-gasoline-pump.288449a9.png\";","import axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nconst baseUrl = '/api/login';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n  return token;\n};\n\nconst getToken = () => {\n  return token;\n};\n\nconst decodeToken = () => {\n  return jwt_decode(token);\n};\n\nconst login = async (userObject) => {\n  const res = await axios.post(baseUrl, userObject);\n  return res.data;\n};\n\nconst verifyPwd = async (userObject) => {\n  const config = {\n    headers: { Authorization: getToken() }\n  };\n\n  try {\n    await axios.post(`${baseUrl}/verify`, userObject, config);\n    return true;\n\n  } catch (error) {\n    return false;\n  }\n};\n\nexport default {\n  login,\n  verifyPwd,\n  setToken,\n  getToken,\n  decodeToken\n};","// Clear all earlier timeouts in order to avoid waterfall of\n// stacked notification timeouts. Code for this was borrowed\n// from StackOverFlow, see: https://tinyurl.com/y5hhzs2h.\nexport const clearAllEarlierTimeouts = () => {\n  const highestId = window.setTimeout(() => {\n    for (let i = highestId; i >= 0; i--) {\n      window.clearInterval(i);\n    }\n  }, 0);\n};\n\n\nconst notificationReducer = (state = null, action) => {\n  switch(action.type) {\n    case 'SET_NOTIFICATION':\n      return action.data.notification;\n    case 'CLEAR_NOTIFICATION':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport const setNotification = (messageObject) => {\n  return async dispatch => {\n    clearAllEarlierTimeouts();\n\n    setTimeout(() => {\n      dispatch(clearNotification());\n    }, messageObject.timeout*1000);\n\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      data: { notification: messageObject }\n    });\n  };\n};\n\nexport const clearNotification = () => {\n  return async dispatch => {\n    clearAllEarlierTimeouts();\n\n    dispatch({\n      type: 'CLEAR_NOTIFICATION',\n      data: null\n    });\n  };\n};\n\nexport default notificationReducer;","import axios from 'axios';\nimport loginService from './login';\nconst baseUrl = '/api/users';\n\nconst getSimpleUserList = async () => {\n  const config = {\n    headers: { Authorization: loginService.getToken() }\n  };\n\n  const res = await axios.get(`${baseUrl}/simple`, config);\n  return res.data;\n};\n\nconst getUserById = async () => {\n  const config = {\n    headers: { Authorization: loginService.getToken() }\n  };\n\n  const user = loginService.decodeToken();\n\n  const res = await axios.get(`${baseUrl}/${user.id}`, config);\n  return res.data;\n};\n\nconst addUser = async (userObject) => {\n  const res = await axios.post(baseUrl, userObject);\n  return res.data;\n};\n\nconst updateUser = async (userObject) => {\n  const config = {\n    headers: { Authorization: loginService.getToken() }\n  };\n\n  const user = loginService.decodeToken();\n\n  const res = await axios.put(`${baseUrl}/${user.id}/update`, userObject, config);\n\n  return res.data;\n};\n\nconst removeUser = async () => {\n  const config = {\n    headers: { Authorization: loginService.getToken() }\n  };\n\n  const user = loginService.decodeToken();\n\n  const res = await axios.delete(`${baseUrl}/${user.id}`, config);\n\n  return res.data;\n};\n\nexport default {\n  getSimpleUserList,\n  getUserById,\n  addUser,\n  updateUser,\n  removeUser\n};","import axios from 'axios';\nimport loginService from './login';\nconst baseUrl = '/api/vehicles';\n\nconst addVehicle = async (reqObject) => {\n  const config = {\n    headers: { Authorization: loginService.getToken() }\n  };\n\n  const res = await axios.post(baseUrl, reqObject, config);\n  return res.data;\n};\n\nconst updateVehicle = async (reqObject) => {\n  const config = {\n    headers: { Authorization: loginService.getToken() }\n  };\n\n  const res = await axios.put(\n    `${baseUrl}/${reqObject.vehicle.id}/update`,\n    reqObject,\n    config\n  );\n  return res.data;\n};\n\nconst removeVehicle = async (vehicleId) => {\n  const config = {\n    headers: { Authorization: loginService.getToken() }\n  };\n\n  const res = await axios.delete(`${baseUrl}/${vehicleId}`, config);\n  return res.data;\n};\n\nexport default {\n  addVehicle,\n  updateVehicle,\n  removeVehicle\n};","import axios from 'axios';\nimport loginService from './login';\nconst baseUrl = '/api/refuelings';\n\nconst addRefueling = async (reqObject) => {\n  const config = {\n    headers: { Authorization: loginService.getToken() }\n  };\n\n  const res = await axios.post(baseUrl, reqObject, config);\n  return res.data;\n};\n\nconst updateRefueling = async (reqObject) => {\n  const config = {\n    headers: { Authorization: loginService.getToken() }\n  };\n\n  const res = await axios.put(\n    `${baseUrl}/${reqObject.refueling.id}/update`,\n    reqObject,\n    config\n  );\n  return res.data;\n};\n\nconst removeRefueling = async (refuelingId) => {\n  const config = {\n    headers: { Authorization: loginService.getToken() }\n  };\n\n  const res = await axios.delete(`${baseUrl}/${refuelingId}`, config);\n  return res.data;\n};\n\nexport default {\n  addRefueling,\n  updateRefueling,\n  removeRefueling\n};","// Redux reducer for keeping information which vehicle specific\n// refueling block, on Refuelings view, is collapsed and which is expanded.\nconst listStateReducer = (state = [], action) => {\n\n  switch(action.type) {\n\n    case 'INIT_LIST_STATES':\n      return action.data;\n\n    case 'TOGGLE_LIST_STATE': {\n      const updatedListStates = state.map(listItem => {\n        if (listItem.id === action.data) {\n          return { ...listItem, state: listItem.state === 'open' ? 'closed' : 'open' };\n        } else {\n          return listItem;\n        }\n      });\n\n      return updatedListStates;\n    }\n\n    case 'UPDATE_LIST_STATE': {\n      const updatedListStates = state.map(listItem => {\n        if (listItem.id === action.data.id) {\n          return action.data;\n        } else {\n          return listItem;\n        }\n      });\n\n      return updatedListStates;\n    }\n\n    case 'REMOVE_FROM_LIST_STATES': {\n      const updatedListStates = state.filter(listItem => {\n        if (listItem.id !== action.data) {\n          return listItem;\n        }\n        return null;\n      });\n\n      return updatedListStates;\n    }\n\n    case 'ADD_IN_LIST_STATES': {\n      const updatedListStates = [...state];\n      updatedListStates.push(action.data);\n\n      return updatedListStates;\n    }\n\n    default:\n      return state;\n  }\n};\n\n// Action creators for listStateReducer\nexport const initListStates = (listStates) => {\n  return dispatch => {\n    dispatch({\n      type: 'INIT_LIST_STATES',\n      data: listStates\n    });\n  };\n};\n\nexport const toggleListState = (listId) => {\n  return dispatch => {\n    dispatch({\n      type: 'TOGGLE_LIST_STATE',\n      data: listId\n    });\n  };\n};\n\nexport const updateListState = (listObject) => {\n  return dispatch => {\n    dispatch({\n      type: 'UPDATE_LIST_STATE',\n      data: listObject\n    });\n  };\n};\n\nexport const removeFromListStates = (id) => {\n  return dispatch => {\n    dispatch({\n      type: 'REMOVE_FROM_LIST_STATES',\n      data: id\n    });\n  };\n};\n\nexport const addInListStates = (listItemObject) => {\n  return dispatch => {\n    dispatch({\n      type: 'ADD_IN_LIST_STATES',\n      data: listItemObject\n    });\n  };\n};\n\nexport default listStateReducer;","import userService from '../services/users';\nimport vehicleService from '../services/vehicles';\nimport refuelingService from '../services/refuelings';\nimport { logoutUser } from './loginReducer';\nimport { setNotification, clearAllEarlierTimeouts } from './notificationReducer';\nimport { addInListStates, updateListState, removeFromListStates } from './listStateReducer';\n\nconst userReducer = (state = {}, action) => {\n\n  switch(action.type) {\n\n    case 'INIT_USER':\n      return action.data;\n\n    case 'ADD_VEHICLE_TO_USER': {\n      const updatedUser = { ...state };\n\n      updatedUser.vehicles.push(action.data.vehicle);\n\n      updatedUser.primaryVehicle = action.data.primary;\n\n      return updatedUser;\n    }\n\n    case 'UPDATE_USER_VEHICLE': {\n      const updatedUser = { ...state };\n\n      updatedUser.vehicles = state.vehicles.map(vehicle =>\n        vehicle.id !== action.data.vehicle.id\n          ? vehicle\n          : action.data.vehicle\n      );\n\n      updatedUser.primaryVehicle = action.data.primary;\n\n      return updatedUser;\n    }\n\n    case 'ADD_REFUELING': {\n      const updatedUser = { ...state };\n\n      updatedUser.vehicles = state.vehicles.map(vehicle => {\n        if (vehicle.id === action.data.entry.vehicle.id) {\n          // Vehicle odometer is updated only if the\n          // entry is added in the end of the list.\n          if (action.data.type === 'addEnd') {\n            vehicle.odoMeter = action.data.entry.odoMeter;\n          }\n          vehicle.refuelings.push(action.data.entry);\n        }\n\n        return vehicle;\n      });\n\n      return updatedUser;\n    }\n\n    case 'REMOVE_VEHICLE_FROM_USER': {\n      const updatedUser = { ...state };\n\n      // Find index of vehicle that is wanted to remove\n      const indexToBeRemoved = state.vehicles.findIndex(v => v.id === action.data.vehicle.id);\n\n      // Splice vehicle to be removed\n      updatedUser.vehicles.splice(indexToBeRemoved, 1);\n\n      updatedUser.primaryVehicle = action.data.primary;\n\n      return updatedUser;\n    }\n\n    case 'UPDATE_USER_REFUELING_ENTRY': {\n      const updatedUser = { ...state };\n\n      // Find vehicle having refueling entry which need to be updated.\n      const updatedVehicle = state.vehicles.find(v =>\n        v.id === action.data.updatedEntry.vehicle.id\n      );\n\n      // Find correct refueling entry from the vehicle and update it.\n      updatedVehicle.refuelings = updatedVehicle.refuelings.map(refueling =>\n        refueling.id === action.data.updatedEntry.id\n          ? action.data.updatedEntry\n          : refueling\n      );\n\n      // Update vehicle's odometer if that was updated on the server.\n      if (action.data.vehicleOdoUpdated) {\n        updatedVehicle.odoMeter = action.data.updatedEntry.odoMeter;\n      }\n\n      // Find correct vehicle from user's vehicle list and update it.\n      updatedUser.vehicles = updatedUser.vehicles.map(vehicle =>\n        vehicle.id === updatedVehicle.id\n          ? updatedVehicle\n          : vehicle\n      );\n\n      return updatedUser;\n    }\n\n    case 'REMOVE_REFUELING_FROM_USER': {\n      const updatedUser = { ...state };\n\n      // Loop through all user's vehicles and find the one having\n      // the refueling entry to be removed.\n      updatedUser.vehicles = updatedUser.vehicles.map(vehicle => {\n\n        // If vehicle having refueling entry to be removed...\n        if (vehicle.id === action.data.removedRefuelingEntry.vehicle) {\n\n          // ...get the index of refueling entry to be removed...\n          const indexToBeRemoved = vehicle.refuelings.findIndex(r => r.id === action.data.removedRefuelingEntry.id);\n\n          // ...and then remove the entry referenced by the index.\n          vehicle.refuelings.splice(indexToBeRemoved, 1);\n\n          // If the removed refueling entry was the latest one, we need to\n          // update vehicles odometer accordingly.\n          if (action.data.vehicleOdoUpdated) {\n            vehicle.odoMeter = vehicle.odoMeter - action.data.removedRefuelingEntry.tripKilometers;\n          }\n\n          // Return updated vehicle record.\n          return vehicle;\n\n        } else {\n          // Vehicle doesn't have refueling entry to be removed ->\n          // return it without any changes.\n          return vehicle;\n        }\n      });\n\n      return updatedUser;\n    }\n\n    default:\n      return state;\n  }\n};\n\n// Action creators for userReducer\nexport const initializeUser = (id) => {\n  return async dispatch => {\n    try {\n      const user = await userService.getUserById();\n      dispatch({\n        type: 'INIT_USER',\n        data: user\n      });\n    } catch (error) {\n      console.log('userReducer, getUser error:', error);\n    }\n  };\n};\n\nexport const addVehicleToUser = (reqObject) => {\n  return async dispatch => {\n    try {\n      const response = await vehicleService.addVehicle(reqObject);\n\n      dispatch({\n        type: 'ADD_VEHICLE_TO_USER',\n        data: response\n      });\n\n      // New vehicle must be added also in Redux storage.\n      dispatch(addInListStates({\n        id: response.vehicle.id,\n        state: response.primary ? 'open' : 'closed'\n      }));\n\n      dispatch(setNotification({\n        type: 'info',\n        header: undefined,\n        content: `Ajoneuvo ${response.vehicle.name} (${response.vehicle.licensePlateId}) lisätty onnistuneesti.`,\n        timeout: 3.5\n      }));\n\n    } catch (error) {\n\n      dispatch(setNotification({\n        type: 'error',\n        header: undefined,\n        content: 'Odottamaton virhe ajoneuvon lisäyksessä. Yritä myöhemmin uudelleen.',\n        timeout: 3.5\n      }));\n    }\n  };\n};\n\nexport const updateUserVehicle = (reqObject) => {\n  return async dispatch => {\n    try {\n      const response = await vehicleService.updateVehicle(reqObject);\n\n      dispatch({\n        type: 'UPDATE_USER_VEHICLE',\n        data: { vehicle: response.vehicle, primary: response.primary }\n      });\n\n      // Primary vehicle status must be saved in Redux store in order\n      // open/close the vehicle blocks correctly on Refuelings view.\n      dispatch(updateListState({\n        id: response.vehicle.id,\n        state: response.primary ? 'open' : 'closed'\n      }));\n\n      dispatch(setNotification({\n        type: 'info',\n        header: undefined,\n        content: `Ajoneuvo ${response.vehicle.name} (${response.vehicle.licensePlateId}) päivitetty onnistuneesti.`,\n        timeout: 3.5\n      }));\n\n    } catch (error) {\n\n      dispatch(setNotification({\n        type: 'error',\n        header: undefined,\n        content: 'Odottamaton virhe ajoneuvon päivityksessä. Yritä myöhemmin uudelleen.',\n        timeout: 3.5\n      }));\n    }\n  };\n};\n\nexport const addRefueling = (newRefuelingEntry) => {\n  return async dispatch => {\n    try {\n      const refueling = await refuelingService.addRefueling(newRefuelingEntry);\n\n      dispatch({\n        type: 'ADD_REFUELING',\n        data: refueling\n      });\n\n      dispatch(setNotification({\n        type: 'info',\n        header: undefined,\n        content: 'Uusi tankkaus lisäytty onnistuneesti.',\n        timeout: 3.5\n      }));\n\n    } catch (error) {\n\n      dispatch(setNotification({\n        type: 'error',\n        header: undefined,\n        content: 'Odottamaton virhe tankkauksen lisäyksessä. Yritä myöhemmin uudelleen.',\n        timeout: 3.5\n      }));\n    }\n  };\n};\n\nexport const removeVehicleFromUser = (vehicleId) => {\n  return async dispatch => {\n    try {\n      const response = await vehicleService.removeVehicle(vehicleId);\n\n      dispatch({\n        type: 'REMOVE_VEHICLE_FROM_USER',\n        data: response\n      });\n\n      dispatch(removeFromListStates(vehicleId));\n\n      dispatch(setNotification({\n        type: 'info',\n        header: undefined,\n        content: `Ajoneuvo ${response.vehicle.name} (${response.vehicle.licensePlateId}) poistettu onnistuneesti.`,\n        timeout: 3.5\n      }));\n\n    } catch (error) {\n\n      dispatch(setNotification({\n        type: 'error',\n        header: undefined,\n        content: 'Odottamaton virhe ajoneuvon poistossa. Yritä myöhemmin uudelleen.',\n        timeout: 3.5\n      }));\n    }\n  };\n};\n\nexport const updateUserRefuelingEntry = (reqObject) => {\n  return async dispatch => {\n    try {\n      const result = await refuelingService.updateRefueling(reqObject);\n\n      dispatch({\n        type: 'UPDATE_USER_REFUELING_ENTRY',\n        data: result\n      });\n\n      dispatch(setNotification({\n        type: 'info',\n        header: undefined,\n        content: 'Tankkausmerkintä päivitetty onnistuneesti.',\n        timeout: 3.5\n      }));\n\n    } catch (error) {\n\n      dispatch(setNotification({\n        type: 'error',\n        header: undefined,\n        content: 'Odottamaton virhe tankkausmerkinnän päivityksessä. Yritä myöhemmin uudelleen.',\n        timeout: 3.5\n      }));\n    }\n  };\n};\n\nexport const removeRefuelingFromUser = (RefuelingId) => {\n  return async dispatch => {\n    try {\n      const refueling = await refuelingService.removeRefueling(RefuelingId);\n\n      dispatch({\n        type: 'REMOVE_REFUELING_FROM_USER',\n        data: refueling\n      });\n\n      dispatch(setNotification({\n        type: 'info',\n        header: undefined,\n        content: 'Tankkausmerkintä poistettu onnistuneesti.',\n        timeout: 3.5\n      }));\n\n    } catch (error) {\n\n      dispatch(setNotification({\n        type: 'error',\n        header: undefined,\n        content: 'Odottamaton virhe tankkausmerkinnän poistossa. Yritä myöhemmin uudelleen.',\n        timeout: 3.5\n      }));\n    }\n  };\n};\n\nexport const removeUserAccount = () => {\n  return async dispatch => {\n    try {\n      await userService.removeUser();\n\n      dispatch(setNotification({\n        type: 'info',\n        header: undefined,\n        content: 'Käyttäjätunnus poistettu onnistuneesti.',\n        timeout: 3.5\n      }));\n\n      clearAllEarlierTimeouts();\n\n      setTimeout(() => {\n        dispatch(logoutUser());\n      }, 3500);\n\n    } catch (error) {\n\n      dispatch(setNotification({\n        type: 'error',\n        header: undefined,\n        content: 'Odottamaton virhe käyttäjätunnuksen poistossa. Yritä myöhemmin uudelleen.',\n        timeout: 3.5\n      }));\n    }\n  };\n};\n\nexport default userReducer;","import jwt_decode from 'jwt-decode';\nimport loginService from '../services/login';\nimport { setNotification } from './notificationReducer';\nimport { initializeUser } from './userReducer';\n\nconst loginReducer = (state = null, action) => {\n  switch(action.type) {\n\n    case 'LOGIN_USER':\n      window.localStorage.setItem(\n        'loggedFTAUser', JSON.stringify(action.data)\n      );\n      loginService.setToken(action.data);\n      window.location.href = '/';\n      return action.data;\n\n    case 'LOGOUT_USER':\n      window.localStorage.removeItem('loggedFTAUser');\n      window.localStorage.removeItem('currentFTAPage');\n      window.location.href = '/';\n      return null;\n\n    default:\n      return state;\n  }\n};\n\n// Action creators for loginReducer\nexport const loginUser = userObject => {\n  return async dispatch => {\n    try {\n      const response = await loginService.login(userObject);\n      dispatch({\n        type: 'LOGIN_USER',\n        data: response.token\n      });\n    } catch (error) {\n      dispatch(setNotification({\n        type: 'error',\n        header: 'Kirjautuminen epäonnistui',\n        content: 'Virheellinen käyttäjätunnus tai salasana',\n        timeout: 3.5\n      }));\n    }\n  };\n};\n\nexport const setLoggedInUser = () => {\n  return async dispatch => {\n    const loggedUserJSON = window.localStorage.getItem('loggedFTAUser');\n    if (loggedUserJSON) {\n      const token = JSON.parse(loggedUserJSON);\n      loginService.setToken(token);\n      const user = jwt_decode(token);\n      dispatch(initializeUser(user.id));\n    }\n  };\n};\n\nexport const logoutUser = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'LOGOUT_USER',\n      data: null\n    });\n  };\n};\n\nexport default loginReducer;","import userService from '../services/users';\n\nconst usersReducer = (state = [], action) => {\n\n  switch(action.type) {\n\n    case 'INIT_USERS_LIST':\n      return action.data;\n\n    default:\n      return state;\n  }\n};\n\n// Action creators for usersReducer\nexport const initSimpleUserList = (id) => {\n  return async dispatch => {\n    try {\n      const users = await userService.getSimpleUserList();\n      dispatch({\n        type: 'INIT_USERS_LIST',\n        data: users\n      });\n    } catch (error) {\n      console.log('usersReducer, getSimpleUserList error:', error);\n    }\n  };\n};\n\nexport default usersReducer;","const naviReducer = (state = '', action) => {\n\n  switch(action.type) {\n\n    case 'INIT_ACTIVE_ITEM': {\n      const currentPage = window.localStorage.getItem('currentFTAPage');\n      if (currentPage) {\n        return currentPage;\n      }\n      return action.data;\n    }\n\n    case 'UPDATE_ACTIVE_ITEM': {\n      window.localStorage.setItem('currentFTAPage', action.data);\n      return action.data;\n    }\n\n    default:\n      return state;\n  }\n};\n\n// Action creators\nexport const initActiveItem = (name) => {\n  return dispatch => {\n    dispatch({\n      type: 'INIT_ACTIVE_ITEM',\n      data: name\n    });\n  };\n};\n\nexport const setActiveItem = (name) => {\n  return dispatch => {\n    dispatch({\n      type: 'UPDATE_ACTIVE_ITEM',\n      data: name\n    });\n  };\n};\n\nexport default naviReducer;","const refuelingReducer = (state = {}, action) => {\n\n  switch(action.type) {\n\n    case 'SET_REFUELING_ENTRY':\n      return action.data;\n\n    case 'RESET_REFUELING_ENTRY':\n      return action.data;\n\n    default:\n      return state;\n  }\n};\n\n// Action creators for refuelingReducer\nexport const setRefuelingEntry = (state) => {\n  return dispatch => {\n    dispatch({\n      type: 'SET_REFUELING_ENTRY',\n      data: state\n    });\n  };\n};\n\nexport const resetRefuelingEntry = () => {\n  return dispatch => {\n    dispatch({\n      type: 'RESET_REFUELING_ENTRY',\n      data: {}\n    });\n  };\n};\n\nexport default refuelingReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport loginReducer from './reducers/loginReducer';\nimport userReducer from './reducers/userReducer';\nimport usersReducer from './reducers/usersReducer';\nimport naviReducer from './reducers/naviReducer';\nimport notificationReducer from './reducers/notificationReducer';\nimport refuelingReducer from './reducers/refuelingReducer';\nimport listStateReducer from './reducers/listStateReducer';\n\nconst reducer = combineReducers({\n  login: loginReducer,\n  note: notificationReducer,\n  user: userReducer,\n  users: usersReducer,\n  navi: naviReducer,\n  refueling: refuelingReducer,\n  listStates: listStateReducer\n});\n\nexport const store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n\n//store.subscribe(() => console.log(store.getState()))","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Message } from 'semantic-ui-react';\nimport './Notification.css';\n\nconst Notification = () => {\n  const note = useSelector(state => state.note);\n\n  return (\n    <Message color={note.type === 'info' ? 'green' : 'red' }>\n      {note.header ? <div className='note-header'>{note.header}</div> : null}\n      <div>{note.content}</div>\n    </Message>\n  );\n};\n\nexport default Notification;","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment,\n  Icon\n} from 'semantic-ui-react';\nimport { loginUser } from '../reducers/loginReducer';\nimport Notification from '../components/Notification/Notification';\nimport { clearNotification } from '../reducers/notificationReducer';\nconst loginPageLogo = require('../assets/images/logo-gasoline-pump.png');\n\nconst LoginForm = (props) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const note = useSelector(state => state.note);\n\n  const dispatch = useDispatch();\n\n  const handleUserNameOnChange = (event) => {\n    setUsername(event.target.value);\n  };\n\n  const handleUserPasswordOnChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const handleSubmitLogin = async (event) => {\n    event.preventDefault();\n    dispatch(loginUser({ user: { username, password } }));\n  };\n\n  return (\n    <Grid textAlign='center' style={{ height: '65vh' }} verticalAlign='middle'>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as='h2' color='orange' textAlign='center'>\n          <Image src={loginPageLogo} /> Tankkitutka\n        </Header>\n        <Form size='large' onSubmit={handleSubmitLogin}>\n          <Segment raised>\n            <Form.Input\n              fluid icon='user'\n              iconPosition='left'\n              placeholder='Käyttäjätunnus'\n              onChange={handleUserNameOnChange}\n            />\n            <Form.Input\n              fluid\n              icon='lock'\n              iconPosition='left'\n              placeholder='Salasana'\n              type='password'\n              onChange={handleUserPasswordOnChange}\n            />\n\n            <Button type='submit' color='orange' fluid size='large'>\n              Kirjaudu\n            </Button>\n          </Segment>\n        </Form>\n        <Message>\n          Ei tunnusta vielä?\n          <Link\n            to=\"/register\"\n            onClick={() => dispatch(clearNotification())}\n          > Rekisteröidy\n          </Link>\n        </Message>\n        <Message icon color='yellow'>\n          <Icon name='warning sign' />\n          <Message.Content style={{ textAlign: 'left' }}>\n            <Message.Header>\n              Huomio!\n            </Message.Header>\n            Tämä on testisovellus! Sovelluksen tiedot nollataan aika ajoin ilman ennakkovaroitusta.\n          </Message.Content>\n        </Message>\n        {note ? <Notification /> : null}\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default LoginForm;","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { Menu, Button, Icon } from 'semantic-ui-react';\nimport { initActiveItem, setActiveItem } from '../../reducers/naviReducer';\nimport { logoutUser } from '../../reducers/loginReducer';\nimport { clearNotification } from '../../reducers/notificationReducer';\nimport './NavBar.css';\n\nconst NavBar = ({ userName }) => {\n  // Active navi item is handled via Redux store. This is so that it\n  // is possible to highlight correct navi item also in the situations\n  // when there is clicked a custom navi link outside the navibar, i.e.\n  // on Refueling list when there are no vehicles yet.\n  const activePage = useSelector(state => state.navi);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!activePage) {\n      dispatch(initActiveItem('/refueling-list'));\n    }\n  },[activePage, dispatch]);\n\n  const handleLogOutOnClick = () => {\n    dispatch(logoutUser());\n  };\n\n  return (\n    <>\n      <Menu pointing secondary>\n        <Menu.Item\n          as={NavLink} to='/refueling-list'\n          position='left'\n          className='menu-item-spacing'\n          active={activePage === '/refueling-list'}\n          onClick={() => {\n            dispatch(setActiveItem('/refueling-list'));\n            dispatch(clearNotification());\n          }}\n        >\n          <Icon name='car' />\n          Tankkaukset\n        </Menu.Item>\n        <Menu.Item\n          as={NavLink} to='/my-details'\n          position='right'\n          className='menu-item-spacing'\n          active={activePage === '/my-details'}\n          onClick={() => {\n            dispatch(setActiveItem('/my-details'));\n            dispatch(clearNotification());\n          }}\n        >\n          <Icon name='user circle outline' />\n          {userName}\n        </Menu.Item>\n        <Menu.Item>\n          <Button\n            onClick={handleLogOutOnClick}\n            compact={true}\n            icon='log out'\n            content='Poistu'\n          />\n        </Menu.Item>\n      </Menu>\n    </>\n  );\n};\n\nexport default NavBar;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Grid, Header, Button, Segment, Icon } from 'semantic-ui-react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Link } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport userService from '../../services/users';\nimport { setNotification, clearNotification } from '../../reducers/notificationReducer';\nimport Notification from '../Notification/Notification';\nimport './RegistrationForm.css';\n\nconst RegistrationForm = (props) => {\n  const note = useSelector(state => state.note);\n\n  const dispatch = useDispatch();\n\n  const postNewUser = async (fields, resetForm) => {\n    const newUser = {\n      user: {\n        name: fields.name,\n        username: fields.username,\n        password: fields.password\n      }\n    };\n\n    try {\n      await userService.addUser(newUser);\n      resetForm({ fields: '' });\n\n      dispatch(setNotification({\n        type: 'info',\n        header: 'Rekisteröinti onnistui',\n        content: 'Voit nyt kirjautua sisään kirjautumissivun kautta',\n        timeout: 3.5\n      }));\n\n    } catch (error) {\n      dispatch(setNotification({\n        type: 'error',\n        header: 'Rekisteröinti epäonnistui',\n        content: 'Ole hyvä ja yritä myöhemmin uudelleen',\n        timeout: 3.5\n      }));\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        username: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Nimi on pakollinen tieto')\n          .matches(/^\\w[a-zA-ZäöåÄÖÅ(\\- )]+[\\wäöåÄÖÅ]+$/, 'Nimi saa sisältää vain kirjaimia.')\n          .min(5, 'Nimi oltava vähintään 5 merkkiä pitkä')\n          .max(50, 'Nimen maksimipituus on 50 merkkiä'),\n        username: Yup.string()\n          .required('Käyttäjätunnus on pakollinen tieto')\n          .matches(/^[\\w]*[a-zA-ZäöåÄÖÅ]+[\\w]$/, 'Käyttäjätunnus saa sisältää vain kirjaimia ja numeroita.')\n          .min(5, 'Käyttäjätunnus vähintään 5 merkkiä pitkä')\n          .max(12, 'Käyttäjätunnuksen maksimipituus on 12 merkkiä'),\n        password: Yup.string()\n          .required('Salasana on pakollinen tieto')\n          .matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]/, 'Salasanassa oltava vähintään yksi kirjain, yksi numero ja yksi erikoismerkki.')\n          .min(6, 'Salasanan oltava vähintään 6 merkkiä pitkä')\n          .max(32, 'Salasanan maksimipituus on 32 merkkiä'),\n        confirmPassword: Yup.string()\n          .required('Salasanan varmistus on pakollinen tieto')\n          .oneOf([Yup.ref('password'), null], 'Salasana ja sen varmistus eivät vastaa toisiaan.')\n      })}\n      onSubmit={(fields, { resetForm }) => {\n        //alert('SUCCESS!!! :-)\\n\\n' + JSON.stringify(fields, null, 4));\n        postNewUser(fields, resetForm);\n      }}\n    >\n      {({ errors, status, touched }) => (\n        <div>\n          <Grid textAlign='center' style={{ height: '75vh' }} verticalAlign='middle'>\n            <Grid.Column style={{ maxWidth: 350 }}>\n              <Header as='h2' color='orange' textAlign='center'>\n                Rekisteröi käyttäjätunnus\n              </Header>\n              <Segment raised>\n                <Form id=\"registrationForm\" className='form-container'>\n                  <div className='form-row'>\n                    <div className='form-group'>\n                      <label htmlFor='name'>Nimi:</label>\n                      <Field name='name' type='text' placeholder='Etunimi Sukunimi' className={'form-control' + (errors.name && touched.name ? ' is-invalid' : '')} />\n                      <ErrorMessage name=\"name\" component=\"div\" className=\"invalid-feedback\" />\n                    </div>\n                  </div>\n                  <div className='form-row'>\n                    <div className='form-group'>\n                      <label htmlFor='username'>Käyttäjätunnus:</label>\n                      <Field name='username' type='text' placeholder='Käyttäjätunnus' className={'form-control' + (errors.username && touched.username ? ' is-invalid' : '')} />\n                      <ErrorMessage name=\"username\" component=\"div\" className=\"invalid-feedback\" />\n                    </div>\n                  </div>\n                  <div className='form-row'>\n                    <div className='form-group'>\n                      <label htmlFor='password'>Salasana:</label>\n                      <Field name='password' type='password' placeholder='Salasana' className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\n                      <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n                    </div>\n                  </div>\n                  <div className='form-row'>\n                    <div className='form-group'>\n                      <label htmlFor='confirmPassword'>Toista salasana:</label>\n                      <Field name='confirmPassword' type='password' placeholder='Toista salasana' className={'form-control' + (errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : '')} />\n                      <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"invalid-feedback\" />\n                    </div>\n                  </div>\n                  <div className=\"reg-form-footer-row\">\n                    <Button\n                      secondary\n                      type='reset'\n                      icon='erase'\n                      content='Tyhjennä'\n                    />\n                    <Button\n                      primary\n                      type='submit'\n                      icon='checkmark'\n                      content='Lähetä'\n                    />\n                  </div>\n                </Form>\n              </Segment>\n              <div className=\"reg-form-link-back-row\">\n                <Link to='/login' onClick={() => dispatch(clearNotification())}>\n                  <Icon name='arrow alternate circle left outline' />\n                  Palaa kirjautumiseen\n                </Link>\n              </div>\n              {note ? <Notification /> : null}\n            </Grid.Column>\n          </Grid>\n        </div>\n      )}\n    </Formik>\n  );\n};\n\nexport default RegistrationForm;","import { useState, useEffect } from 'react';\n\n/* This custom hook is borrowed from StackOverFlow, see the following article:\n * https://stackoverflow.com/questions/36862334/get-viewport-window-height-in-reactjs\n*/\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n};\n\nconst useWindowDimensions = () => {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowDimensions(getWindowDimensions());\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n};\n\nexport default useWindowDimensions;","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button, Modal, Grid, Segment, Input, Icon, Message } from 'semantic-ui-react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { addDays } from 'date-fns';\nimport { addRefueling } from '../../reducers/userReducer';\nimport { clearNotification } from '../../reducers/notificationReducer';\n\nconst AddRefuelingModal = ({ vehicle, user }) => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [date, setDate] = useState('');\n  const [odoMeter, setOdoMeter] = useState('');\n  const [liters, setLiters] = useState('');\n  const [trip, setTrip] = useState('');\n  const [avgConsumption, setAvgConsumption] = useState('');\n  const [addEndOfList, setAddEndOfList] = useState(true);\n  const [faultyOdoMeter, setFaultyOdoMeter] = useState({ state: false, text: '' });\n  const [faultyLiters, setFaultyLiters] = useState({ state: false, text: '' });\n  const [faultyTrip, setFaultyTrip] = useState({ state: false, text: '' });\n  const [latestRefueling, setLatestRefueling] = useState(undefined);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // Store previous odometer value for the later logic in the component.\n    if (vehicle) {\n      if (vehicle.refuelings.length > 0) {\n        vehicle.refuelings.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n        setLatestRefueling(vehicle.refuelings[0]);\n      } else {\n        setLatestRefueling({ odoMeter: vehicle.odoMeter });\n      }\n    }\n\n    // Set the datepicker date value on the current day by default.\n    if (!date) {\n      setDate(new Date());\n    }\n\n  },[vehicle, date]);\n\n  // Aux function to reset all local storeges of the component.\n  const resetAllStates = () => {\n    setDate('');\n    setOdoMeter('');\n    setLiters('');\n    setTrip('');\n    setAvgConsumption('');\n    setFaultyOdoMeter({ state: false, text: '' });\n    setFaultyLiters({ state: false, text: '' });\n    setFaultyTrip({ state: false, text: '' });\n    setAddEndOfList(true);\n  };\n\n  const handleCancelOnClick = (e) => {\n    resetAllStates();\n    setModalOpen(false);\n  };\n\n  const handleResetOnClick = () => {\n    resetAllStates();\n  };\n\n  const handleDateOnChange = (val) => {\n    setOdoMeter('');\n    setLiters('');\n    setTrip('');\n    setAvgConsumption('');\n\n    // Identify, based on previous refueling and selected date,\n    // what is the refueling type (addEnd, addMiddle). This effects\n    // to the logic how the new refueling entry is stored.\n    if (latestRefueling && new Date(val).getTime() < new Date(latestRefueling.date)) {\n      setAddEndOfList(false);\n    } else {\n      setAddEndOfList(true);\n    }\n\n    setDate(val);\n  };\n\n  // Aux function to identify is the new refueling entry ready\n  // for saving. This dictates is the SAVE button enabled or disabled.\n  const isEntryReadyForSave = () => {\n    if (addEndOfList && (\n      odoMeter && !faultyOdoMeter.state &&\n      liters && !faultyLiters.state\n    )) {\n      return true;\n    } else if (!addEndOfList && (\n      liters && !faultyLiters.state &&\n      trip && !faultyTrip.state\n    )){\n      return true;\n    }\n\n    return false;\n  };\n\n  // Validator function for odometer input field.\n  const handleOdoMeterOnBlur = () => {\n    setFaultyOdoMeter({ state: false, text: '' });\n\n    if (!odoMeter) {\n      setFaultyOdoMeter({ state: true, text: 'Kenttä ei saa olla tyhjä.' });\n    } else if (!Number.isInteger(Number(odoMeter))) {\n      setFaultyOdoMeter({ state: true, text: 'Arvon tulee olla kokonaisluku.' });\n    } else if (latestRefueling && odoMeter <= latestRefueling.odoMeter) {\n      setFaultyOdoMeter({ state: true, text: `Arvon tulee olla suurempi kuin aiempi matkamittarin lukema (${latestRefueling.odoMeter}).` });\n    } else {\n      const newTrip = odoMeter - latestRefueling.odoMeter;\n      setTrip(newTrip);\n      if (liters && !faultyLiters.state) {\n        setAvgConsumption(((liters / newTrip) * 100).toFixed(2));\n      }\n    }\n  };\n\n  // Validator function for liters input field.\n  const handleLitersOnBlur = () => {\n    setFaultyLiters(false);\n\n    if (!liters) {\n      setFaultyLiters({ state: true, text: 'Kenttä ei saa olla tyhjä.' });\n    } else if (isNaN(liters)) {\n      setFaultyLiters({ state: true, text: 'Arvon tulee olla numeerinen.' });\n    } else if (liters <= 0) {\n      setFaultyLiters({ state: true, text: 'Arvon tulee olla nollaa suurempi.' });\n    } else {\n      if (trip && !faultyTrip.state) {\n        setAvgConsumption(((liters / trip) * 100).toFixed(2));\n      }\n    }\n  };\n\n  // Validator function for trip input field.\n  const handleTripOnBlur = () => {\n    setFaultyTrip(false);\n\n    if (!trip) {\n      setFaultyTrip({ state: true, text: 'Kenttä ei saa olla tyhjä.' });\n    } else if (isNaN(trip)) {\n      setFaultyTrip({ state: true, text: 'Arvon tulee olla numeerinen.' });\n    } else if (trip <= 0) {\n      setFaultyTrip({ state: true, text: 'Arvon tulee olla nollaa suurempi.' });\n    } else {\n      if (liters && !faultyOdoMeter.state) {\n        setAvgConsumption(((liters / trip) * 100).toFixed(2));\n      }\n    }\n  };\n\n  // Dispatch/POST new refueling request for the server,\n  // clear all local states of the modal and close it.\n  const handleSaveOnClick = () => {\n    const newRefuelingEntry = {\n      refueling: {\n        type: addEndOfList ? 'addEnd' : 'addMiddle',\n        vehicle: vehicle.id,\n        date,\n        odoMeter,\n        liters,\n        trip,\n        avgConsumption\n      }\n    };\n\n    dispatch(addRefueling(newRefuelingEntry));\n\n    resetAllStates();\n    setModalOpen(false);\n  };\n\n  return (\n    <>\n      <Modal\n        closeIcon={true}\n        onClose={() => handleCancelOnClick()}\n        onOpen={() => setModalOpen(true)}\n        open={modalOpen}\n        closeOnDimmerClick={false}\n        closeOnEscape={false}\n        size='tiny'\n        trigger={\n          <div\n            className='add-new-link'\n            onClick={() => dispatch(clearNotification())}\n          >\n            <Icon name='add' />\n            Lisää tankkaus\n          </div>}\n      >\n        <Modal.Header>Lisää uusi tankkaus</Modal.Header>\n        <Modal.Content>\n          <Grid textAlign='center' verticalAlign='top'>\n            <Grid.Column style={{ maxWidth: 400 }}>\n              <Segment raised>\n\n                <div className='refueling-input-block'>\n                  <div className='row-label'>\n                    Ajoneuvo:\n                  </div>\n                  <Input\n                    className='refueling-input'\n                    name='vehicle'\n                    type='text'\n                    value={`${vehicle.name} (${vehicle.licensePlateId})`}\n                    fluid={true}\n                    disabled={true}\n                  />\n                </div>\n\n                <div className='refueling-input-block'>\n                  <div className='row-label'>\n                    Päivämäärä:\n                  </div>\n                  <DatePicker\n                    className='refueling-input dp-custom editable'\n                    value={date}\n                    selected={date}\n                    dateFormat='d.M.yyyy'\n                    onChange={val => handleDateOnChange(val)}\n                    // By preventing default action of onChangeRaw\n                    // we disable keyboard input on DatePicker. The date\n                    // value can be set only by selecting it.\n                    onChangeRaw={(e) => e.preventDefault()}\n                    maxDate={addDays(new Date(), 0)}\n                  />\n                </div>\n\n                {\n                  !addEndOfList\n                    ? null\n                    :\n                    <>\n                      <div className='refueling-input-block'>\n                        <div className='row-label'>\n                          Matkamittari:\n                        </div>\n                        <Input\n                          className={'refueling-input'\n                            .concat(faultyOdoMeter.state ? ' error' : ' editable')\n                          }\n                          name='odoMeter'\n                          type='text'\n                          placeholder={`Anna kilometrit (aiempi: ${vehicle.odoMeter})`}\n                          value={odoMeter}\n                          fluid={true}\n                          onChange={(e) => setOdoMeter(e.target.value)}\n                          onBlur={() => handleOdoMeterOnBlur()}\n                        />\n                        {\n                          faultyOdoMeter.state\n                            ? <Message error content={faultyOdoMeter.text} />\n                            : null\n                        }\n                      </div>\n                    </>\n                }\n\n                <div className='refueling-input-block'>\n                  <div className='row-label'>\n                    Litrat:\n                  </div>\n                  <Input\n                    className={'refueling-input'\n                      .concat(faultyLiters.state ? ' error' : ' editable')\n                    }\n                    name='liters'\n                    type='text'\n                    placeholder='Anna litrat'\n                    value={liters}\n                    fluid={true}\n                    onChange={(e) => setLiters(e.target.value)}\n                    onBlur={handleLitersOnBlur}\n                  />\n                  {\n                    faultyLiters.state\n                      ? <Message error content={faultyLiters.text} />\n                      : null\n                  }\n                </div>\n\n                <div className='refueling-input-block'>\n                  <div className='row-label'>\n                    Trippi:\n                  </div>\n                  <Input\n                    className={'refueling-input'\n                      .concat(!addEndOfList ? ' editable' : '')\n                      .concat(faultyTrip.state ? ' error' : '')\n                    }\n                    name='trip'\n                    type='text'\n                    placeholder={!addEndOfList ? 'Anna kilometrit' : 'ei vielä laskettavissa'}\n                    value={trip}\n                    fluid={true}\n                    onChange={(e) => setTrip(e.target.value)}\n                    onBlur={handleTripOnBlur}\n                    disabled={addEndOfList}\n                  />\n                  {\n                    faultyTrip.state\n                      ? <Message error content={faultyTrip.text} />\n                      : null\n                  }\n                </div>\n\n                <div className='refueling-input-block'>\n                  <div className='row-label'>\n                    KA. kulutus:\n                  </div>\n                  <Input\n                    className='refueling-input'\n                    name='avgConsumption'\n                    type='text'\n                    placeholder='ei vielä laskettavissa'\n                    value={avgConsumption}\n                    fluid={true}\n                    onChange={(e) => setAvgConsumption(e.target.value)}\n                    disabled={true}\n                  />\n                </div>\n\n              </Segment>\n\n            </Grid.Column>\n          </Grid>\n        </Modal.Content>\n        <Modal.Actions className='refueling-modal-actions'>\n          <Button\n            color='black'\n            content='Peruuta'\n            icon='cancel'\n            onClick={() => handleCancelOnClick()}\n          />\n\n          <Button\n            color='blue'\n            content='Tyhjennä'\n            icon='erase'\n            onClick={(e) => handleResetOnClick(e)}\n          />\n\n          <Button\n            content=\"Tallenna\"\n            icon='checkmark'\n            onClick={(e) => handleSaveOnClick(e)}\n            positive\n            disabled={!isEntryReadyForSave()}\n          />\n        </Modal.Actions>\n\n      </Modal>\n    </>\n  );\n};\n\nexport default AddRefuelingModal;","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Grid, Icon, Divider } from 'semantic-ui-react';\nimport { setRefuelingEntry } from '../../reducers/refuelingReducer';\nimport { toggleListState } from '../../reducers/listStateReducer';\nimport useWindowDimensions from '../../hooks';\nimport AddRefuelingModal from './AddRefuelingModal';\n\nconst VehicleRow = ({ vehicle, primary, listStates, user }) => {\n  const [showRefuelingEntries, setShowRefuelingEntries] = useState(false);\n  const { width } = useWindowDimensions();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (listStates && listStates.length > 0) {\n      const result = listStates.find(item => item.id === vehicle.id);\n      if (result && result.state === 'open') {\n        setShowRefuelingEntries(true);\n      }\n    }\n  }, [listStates, vehicle.id]);\n\n  const getFormattedDateString = (date) => {\n    const d = new Date(date);\n    const options = { year: 'numeric', month: 'numeric', day: 'numeric' };\n    return d.toLocaleDateString('fi-FI', options);\n  };\n\n  // If value is round figure, use only one decimal.\n  // Otherwise, use two decimals.\n  const getDecimalFormattedValue = (value) => {\n    if (value % 1 === 0) {\n      return value.toFixed(1);\n    } else {\n      return value.toFixed(2);\n    }\n  };\n\n  const handleRowOnClick = () => {\n    showRefuelingEntries ? setShowRefuelingEntries(false) : setShowRefuelingEntries(true);\n    dispatch(toggleListState(vehicle.id));\n  };\n\n  const RefuelingLabelRow = () => {\n\n    if (vehicle.refuelings.length === 0) {\n      return null;\n    }\n\n    // Limit displayed columns with smaller screens\n    // in order to keep the UI layout intact.\n    if (Number(width) < 550) {\n      return (\n        <Grid.Row className='refueling-title-row' columns={3}>\n          <Grid.Column>\n            Pvm\n          </Grid.Column>\n          <Grid.Column>\n            Trippi\n          </Grid.Column>\n          <Grid.Column>\n            KA. kulutus\n          </Grid.Column>\n        </Grid.Row>\n      );\n\n    // With larger screen sizes, all columns can be displayed.\n    } else {\n      return (\n        <Grid.Row className='refueling-title-row' columns={6}>\n          <Grid.Column>\n            Tankkaaja\n          </Grid.Column>\n          <Grid.Column>\n            Pvm\n          </Grid.Column>\n          <Grid.Column>\n            Matkamittari\n          </Grid.Column>\n          <Grid.Column>\n            Litrat\n          </Grid.Column>\n          <Grid.Column>\n            Trippi\n          </Grid.Column>\n          <Grid.Column>\n            KA. kulutus\n          </Grid.Column>\n        </Grid.Row>\n      );\n    }\n  };\n\n  const RefuelingEntryRow = () => {\n    if (vehicle.refuelings.length === 0) {\n      return (\n        <Grid.Row>\n          <Grid.Column colSpan={6}>\n            Ei kirjattuja tankkauksia\n          </Grid.Column>\n        </Grid.Row>\n      );\n    }\n\n    return vehicle.refuelings.map((refueling, index) => {\n\n      // Smaller screen -> limit columns\n      if (Number(width) < 550) {\n        return (\n          <Grid.Row\n            className={index % 2 === 0 ? 'refueling-entry-row' : 'refueling-entry-row hl-row'}\n            columns={3}\n            key={refueling.id}\n            onClick={() => dispatch(setRefuelingEntry(refueling))}\n          >\n            <Grid.Column>\n              {getFormattedDateString(refueling.date)}\n            </Grid.Column>\n            <Grid.Column>\n              {refueling.tripKilometers}\n            </Grid.Column>\n            <Grid.Column>\n              {getDecimalFormattedValue(refueling.avgConsumption)}\n            </Grid.Column>\n          </Grid.Row>\n        );\n\n      // Larger screen -> no need to limit columns.\n      } else {\n        return (\n          <Grid.Row\n            className={index % 2 === 0 ? 'refueling-entry-row' : 'refueling-entry-row hl-row'}\n            columns={6}\n            key={refueling.id}\n            onClick={() => dispatch(setRefuelingEntry(refueling))}\n          >\n            <Grid.Column>\n              {refueling.user.name}\n            </Grid.Column>\n            <Grid.Column>\n              {getFormattedDateString(refueling.date)}\n            </Grid.Column>\n            <Grid.Column>\n              {refueling.odoMeter}\n            </Grid.Column>\n            <Grid.Column>\n              {getDecimalFormattedValue(refueling.liters)}\n            </Grid.Column>\n            <Grid.Column>\n              {refueling.tripKilometers}\n            </Grid.Column>\n            <Grid.Column>\n              {getDecimalFormattedValue(refueling.avgConsumption)}\n            </Grid.Column>\n          </Grid.Row>\n        );\n      }\n\n    });\n  };\n\n  // Sort refueling entries by date in descending order by default.\n  vehicle.refuelings.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n\n  return (\n    <>\n      <Grid>\n        <Grid.Row className='vehicle-title-row' columns={6}>\n          <Grid.Column className='cursor-pointer' textAlign='left' width={8} onClick={handleRowOnClick}>\n            {primary === vehicle.id ? <Icon className='primary-vehicle-icon' name='star' /> : null}\n            {vehicle.name}\n          </Grid.Column>\n          <Grid.Column textAlign='right' width={8} className='vehicle-title-row-right-column'>\n            <AddRefuelingModal vehicle={vehicle} user={user} />\n            <Icon\n              name={showRefuelingEntries ? 'angle up' : 'angle down'}\n              onClick={handleRowOnClick}\n              className='cursor-pointer'\n            />\n          </Grid.Column>\n        </Grid.Row>\n\n        { // Display refueling entries only if refueling list is opened.\n          showRefuelingEntries\n            ?\n            <>\n              <RefuelingLabelRow />\n              <RefuelingEntryRow />\n            </>\n            : null\n        }\n\n        <Divider />\n      </Grid>\n    </>\n  );\n};\n\nexport default VehicleRow;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Modal, Grid, Segment, Input, Message } from 'semantic-ui-react';\nimport { resetRefuelingEntry } from '../../reducers/refuelingReducer';\nimport { updateUserRefuelingEntry, removeRefuelingFromUser } from '../../reducers/userReducer';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { clearNotification } from '../../reducers/notificationReducer';\nimport { addDays } from 'date-fns';\n\nconst EditRefuelingModal = () => {\n  const refuelingToBeEdited = useSelector(state => state.refueling);\n  const user = useSelector(state => state.user);\n  const [openRefuelingEntryModal, setOpenRefuelingEntryModal] = useState(false);\n  const [originalDate, setOriginalDate] = useState(undefined);\n  const [date, setDate] = useState(undefined);\n  const [originalOdoMeter, setOriginalOdoMeter] = useState();\n  const [odoMeter, setOdoMeter] = useState('');\n  const [faultyOdoMeter, setFaultyOdoMeter] = useState(false);\n  const [originalLiters, setOriginalLiters] = useState();\n  const [liters, setLiters] = useState('');\n  const [faultyLiters, setFaultyLiters] = useState(false);\n  const [trip, setTrip] = useState('');\n  const [faultyTrip, setFaultyTrip] = useState(false);\n  const [originalTrip, setOriginalTrip] = useState();\n  const [avgConsumption, setAvgConsumption] = useState('');\n  const [openDelRefuelingModal, setOpenDelRefuelingModal] = useState(false);\n  const [inputErrorMessage, setInputErrorMessage] = useState('');\n  const [odoFieldEnabled, setOdoFieldEnabled] = useState('');\n  const [latestEntry, setLatestEntry] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // Init edit modal attributes if refuelingToBeEdited is set.\n    if (Object.keys(refuelingToBeEdited).length !== 0) {\n      dispatch(clearNotification());\n      setDate(new Date(refuelingToBeEdited.date));\n      setOriginalDate(new Date(refuelingToBeEdited.date));\n      setOdoMeter(refuelingToBeEdited.odoMeter);\n      setOriginalOdoMeter(refuelingToBeEdited.odoMeter);\n      setLiters(refuelingToBeEdited.liters);\n      setOriginalLiters(refuelingToBeEdited.liters);\n      setTrip(refuelingToBeEdited.tripKilometers);\n      setOriginalTrip(refuelingToBeEdited.tripKilometers);\n      setAvgConsumption(refuelingToBeEdited.avgConsumption);\n      setOpenRefuelingEntryModal(true);\n\n      // Identify which input field is enabled; odometer or trip?\n\n      // First, get the vehicle having the refueling entry to be edited.\n      const vehicle = user.vehicles.find(v => v.id === refuelingToBeEdited.vehicle.id);\n\n      // Then, sort vehicle's refueling entry by date in descending order (latest first).\n      vehicle.refuelings.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n\n      // And finally check if the conditions of the rules are met.\n      if (\n        refuelingToBeEdited.id === vehicle.refuelings[0].id &&\n        refuelingToBeEdited.odoMeter === vehicle.odoMeter\n      ) {\n        setOdoFieldEnabled(true);\n        setLatestEntry(true);\n      } else {\n        setOdoFieldEnabled(false);\n        setLatestEntry(false);\n      }\n    }\n\n  },[dispatch, refuelingToBeEdited, user.vehicles]);\n\n  const handleResetOnClick = () => {\n    dispatch(clearNotification());\n    setDate(new Date(refuelingToBeEdited.date));\n    setOriginalDate(new Date(refuelingToBeEdited.date));\n    setOdoMeter(refuelingToBeEdited.odoMeter);\n    setOriginalOdoMeter(refuelingToBeEdited.odoMeter);\n    setLiters(refuelingToBeEdited.liters);\n    setOriginalLiters(refuelingToBeEdited.liters);\n    setTrip(refuelingToBeEdited.tripKilometers);\n    setOriginalTrip(refuelingToBeEdited.tripKilometers);\n    setAvgConsumption(refuelingToBeEdited.avgConsumption);\n    setOpenRefuelingEntryModal(true);\n    setInputErrorMessage('');\n    setFaultyLiters(false);\n    setFaultyOdoMeter(false);\n    setFaultyTrip(false);\n\n    const vehicle = user.vehicles.find(v => v.id === refuelingToBeEdited.vehicle.id);\n    vehicle.refuelings.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n    if (\n      refuelingToBeEdited.id === vehicle.refuelings[0].id &&\n      refuelingToBeEdited.odoMeter === vehicle.odoMeter\n    ) {\n      setOdoFieldEnabled(true);\n      setLatestEntry(true);\n    } else {\n      setOdoFieldEnabled(false);\n      setLatestEntry(false);\n    }\n  };\n\n  const handleCancelOnClick = (e) => {\n    // Below defined 'event.stopPropagation' is used so that the onClick\n    // event is not bubble up on the parent component. See more information\n    // about this behavior from the following StackOverFlow article:\n    // https://tinyurl.com/y4k2dfuk\n    e.stopPropagation();\n    if (e.target === e.currentTarget) {\n      setOpenRefuelingEntryModal(false);\n      dispatch(resetRefuelingEntry());\n      setFaultyOdoMeter(false);\n      setFaultyLiters(false);\n      setFaultyTrip(false);\n      setOdoFieldEnabled(true);\n    }\n  };\n\n  const handleSaveOnClick = (e) => {\n    e.stopPropagation();\n    if (e.target === e.currentTarget) {\n\n      dispatch(updateUserRefuelingEntry({\n        refueling: {\n          id: refuelingToBeEdited.id,\n          date: date,\n          odoMeter: !odoMeter ? '0' : odoMeter,\n          liters: liters,\n          trip: !trip ? '0' : trip\n        }\n      }));\n\n      setOpenRefuelingEntryModal(false);\n      dispatch(resetRefuelingEntry());\n    }\n  };\n\n  const handleOdoMeterOnBlur = () => {\n    setFaultyOdoMeter(false);\n    setInputErrorMessage('');\n\n    if (!odoMeter ) {\n      setFaultyOdoMeter(true);\n      setInputErrorMessage('Virhe! Kenttä ei saa olla tyhjä.');\n\n    } else if (!Number.isInteger(Number(odoMeter))) {\n      setFaultyOdoMeter(true);\n      setInputErrorMessage('Virhe! Arvon tulee olla kokonaisluku.');\n\n    } else if (Number(odoMeter) <= 0 ) {\n      setFaultyOdoMeter(true);\n      setInputErrorMessage('Virhe! Arvon tulee olla nollaa suurempi.');\n\n    } else if (Number(odoMeter) === Number(originalOdoMeter)) {\n      setFaultyOdoMeter(true);\n      setInputErrorMessage('Virhe! Uusi arvo on sama kuin aiempi.');\n\n    } else {\n      const updatedTrip = Number(odoMeter) - (Number(refuelingToBeEdited.odoMeter) - Number(refuelingToBeEdited.tripKilometers));\n\n      if (updatedTrip <= 0) {\n        setTrip(updatedTrip);\n        setFaultyOdoMeter(true);\n        setInputErrorMessage('Virhe! Arvo on liian pieni.');\n\n      } else if (updatedTrip > 2000) {\n        setTrip(updatedTrip);\n        setFaultyOdoMeter(true);\n        setInputErrorMessage('Virhe! Arvo on liian suuri.');\n\n      } else {\n        const updatedAvgConsumption = (Number(liters) / Number(updatedTrip)) * 100;\n        setTrip(updatedTrip);\n        setAvgConsumption(updatedAvgConsumption);\n      }\n    }\n  };\n\n  const handleLitersOnBlur = () => {\n    setFaultyLiters(false);\n    setInputErrorMessage('');\n\n    if (!liters) {\n      setFaultyLiters(true);\n      setInputErrorMessage('Virhe! Kenttä ei saa olla tyhjä.');\n\n    } else if (isNaN(liters)) {\n      setFaultyLiters(true);\n      setInputErrorMessage('Virhe! Arvon tulee olla numero.');\n\n    } else if (Number(liters) <= 0) {\n      setFaultyLiters(true);\n      setInputErrorMessage('Virhe! Arvon tulee olla nollaa suurempi.');\n\n    } else if (Number(liters) === Number(originalLiters)) {\n      setFaultyLiters(true);\n      setInputErrorMessage('Virhe! Uusi arvo on sama kuin aiempi.');\n\n    } else {\n      const updatedAvgConsumption = (Number(liters) / Number(trip)) * 100;\n      setAvgConsumption(updatedAvgConsumption);\n    }\n  };\n\n  const handleTripOnBlur = () => {\n    setFaultyTrip(false);\n    setInputErrorMessage('');\n\n    if (!trip) {\n      setFaultyTrip(true);\n      setInputErrorMessage('Virhe! Kenttä ei saa olla tyhjä.');\n\n    } else if (isNaN(trip)) {\n      setFaultyTrip(true);\n      setInputErrorMessage('Virhe! Arvon tulee olla numero.');\n\n    } else if (Number(trip) <= 0) {\n      setFaultyTrip(true);\n      setInputErrorMessage('Virhe! Arvon tulee olla nollaa suurempi.');\n\n    } else if (Number(trip) === Number(originalTrip)) {\n      setFaultyTrip(true);\n      setInputErrorMessage('Virhe! Uusi arvo on sama kuin aiempi.');\n\n    } else {\n      const updatedAvgConsumption = (Number(liters) / Number(trip)) * 100;\n      setAvgConsumption(updatedAvgConsumption);\n    }\n  };\n\n  const handleDelCancelOnClick = (e) => {\n    e.stopPropagation();\n    if (e.target === e.currentTarget) {\n      setOpenDelRefuelingModal(false);\n    }\n  };\n\n  const handleDelConfirmOnClick = (refuelingId) => {\n    dispatch(removeRefuelingFromUser(refuelingId));\n    dispatch(resetRefuelingEntry());\n    setOpenDelRefuelingModal(false);\n    setOpenRefuelingEntryModal(false);\n  };\n\n  const ErrorMessage = ({ showError }) => {\n    if (!showError) {\n      return null;\n    }\n\n    return (\n      <Message error>\n        <p>{inputErrorMessage}</p>\n      </Message>\n    );\n  };\n\n  // Return null if refueling entry to be edited\n  // is not set on the Redux state.\n  if (Object.keys(refuelingToBeEdited).length === 0) {\n    return null;\n  }\n\n  const userHasEditRightsForEntry = () => {\n    // Vehicle owner is allowed to edit all refueling entries,\n    // also the ones created by co-owners -> the record is editable.\n    if (refuelingToBeEdited.vehicle.owner === user.id) {\n      return true;\n\n    // Logged in user is not owner of the vehicle BUT he has\n    // done the refueling entry -> the record is editable.\n    } else if (refuelingToBeEdited.user.id === user.id) {\n      return true;\n    }\n\n    // By default, the entry is not editable.\n    return false;\n  };\n\n  const isSaveDisabled = () => {\n    if (!userHasEditRightsForEntry()) {\n      return true;\n    }\n\n    if (faultyOdoMeter || faultyLiters || faultyTrip ) {\n      return true;\n    }\n\n    if ((date && originalDate) && (date.toString() === originalDate.toString() &&\n        odoMeter === originalOdoMeter &&\n        liters === originalLiters &&\n        trip === originalTrip)\n    ) {\n      return true;\n    }\n\n    return false;\n  };\n\n  // When date of refueling entry is changed, we need to identify\n  // is the odometer field enabled or not.\n  const handleDateOnChange = (val) => {\n\n    // Aux function for identifying is the edited entry the only one.\n    const isOnlyEntry = () => {\n      const vehicle = user.vehicles.find(v => v.id === refuelingToBeEdited.vehicle.id);\n      if (vehicle.refuelings.length === 1) {\n        return true;\n      }\n\n      return false;\n    };\n\n    const selectedDate = new Date(val).toISOString().split('T')[0];\n    const dateInEntry = new Date(originalDate).toISOString().split('T')[0];\n\n    if (isOnlyEntry()) {\n      setOdoFieldEnabled(true);\n    } else if (selectedDate === dateInEntry && latestEntry) {\n      setOdoFieldEnabled(true);\n      setDate(new Date(originalDate));\n    } else {\n      setOdoFieldEnabled(false);\n    }\n\n    setDate(new Date(val));\n  };\n\n  // Aux function for identifying is the RESET button enabled or disabled.\n  // (Reset button should be active only if value in any input field has changed.)\n  const isResetDisabled = () => {\n    if (\n      odoFieldEnabled &&\n      new Date(date).getTime() === new Date(originalDate).getTime() &&\n      odoMeter === originalOdoMeter &&\n      liters === originalLiters\n    ) {\n      return true;\n    } else if (\n      !odoFieldEnabled &&\n      new Date(date).getTime() === new Date(originalDate).getTime() &&\n      liters === originalLiters &&\n      trip === originalTrip\n    ) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return (\n    <>\n      <Modal\n        closeIcon={true}\n        onClose={(e) => handleCancelOnClick(e)}\n        onOpen={() => setOpenRefuelingEntryModal(true)}\n        open={openRefuelingEntryModal}\n        closeOnDimmerClick={false}\n        closeOnEscape={false}\n        size='tiny'\n      >\n        <Modal.Header>Muokkaa tankkausta</Modal.Header>\n        <Modal.Content>\n          <Grid textAlign='center' verticalAlign='top'>\n            <Grid.Column style={{ maxWidth: 400 }}>\n              <Segment raised>\n\n                <div className='refueling-input-block'>\n                  <div className='row-label'>\n                    Ajoneuvo:\n                  </div>\n                  <Input\n                    className='refueling-input'\n                    name='vehicle'\n                    type='text'\n                    value={`${refuelingToBeEdited.vehicle.name} (${refuelingToBeEdited.vehicle.licensePlateId})`}\n                    disabled={true}\n                    fluid={true}\n                  />\n                </div>\n\n                <div className='refueling-input-block'>\n                  <div className='row-label'>\n                    Tankkaaja:\n                  </div>\n                  <Input\n                    className='refueling-input'\n                    name='user'\n                    type='text'\n                    value={refuelingToBeEdited.user.name}\n                    disabled={true}\n                    fluid={true}\n                  />\n                </div>\n\n                <div className='refueling-input-block'>\n                  <div className='row-label'>\n                    Päivämäärä:\n                  </div>\n                  <DatePicker\n                    className={\n                      !userHasEditRightsForEntry()\n                        ? 'refueling-input dp-custom dp-disabled'\n                        : 'refueling-input dp-custom editable'\n                    }\n                    value={date}\n                    selected={date}\n                    dateFormat='d.M.yyyy'\n                    onChange={val => handleDateOnChange(val)}\n                    // By preventing default action of onChangeRaw\n                    // we disable keyboard input on DatePicker. The date\n                    // value can be set only by selecting it.\n                    onChangeRaw={(e) => e.preventDefault()}\n                    disabled={!userHasEditRightsForEntry()}\n                    maxDate={addDays(new Date(), 0)}\n                  />\n                </div>\n\n                <div className='refueling-input-block'>\n                  <div className='row-label'>\n                    Matkamittari:\n                  </div>\n                  <Input\n                    className={\n                      !(userHasEditRightsForEntry() && odoFieldEnabled)\n                        ? 'refueling-input'\n                        : 'refueling-input'.concat(faultyOdoMeter ? ' error' : ' editable')\n                    }\n                    name='odoMeter'\n                    type='text'\n                    value={odoMeter}\n                    fluid={true}\n                    onChange={(e) => setOdoMeter(e.target.value)}\n                    onBlur={handleOdoMeterOnBlur}\n                    disabled={!(userHasEditRightsForEntry() && odoFieldEnabled)}\n                  />\n                  <ErrorMessage showError={faultyOdoMeter} />\n                </div>\n\n                <div className='refueling-input-block'>\n                  <div className='row-label'>\n                    Litrat:\n                  </div>\n                  <Input\n                    className={\n                      !userHasEditRightsForEntry()\n                        ? 'refueling-input'\n                        : 'refueling-input'.concat(faultyLiters ? ' error' : ' editable')\n                    }\n                    name='liters'\n                    type='text'\n                    value={liters}\n                    fluid={true}\n                    onChange={(e) => setLiters(e.target.value)}\n                    onBlur={handleLitersOnBlur}\n                    disabled={!userHasEditRightsForEntry()}\n                  />\n                  <ErrorMessage showError={faultyLiters} />\n                </div>\n\n                <div className='refueling-input-block'>\n                  <div className='row-label'>\n                    Trippi:\n                  </div>\n                  <Input\n                    className={\n                      !(userHasEditRightsForEntry() && !odoFieldEnabled)\n                        ? 'refueling-input'\n                        : 'refueling-input'.concat(faultyTrip ? ' error' : ' editable')\n                    }\n                    name='trip'\n                    type='text'\n                    value={trip}\n                    fluid={true}\n                    onChange={(e) => setTrip(e.target.value)}\n                    onBlur={handleTripOnBlur}\n                    disabled={!(userHasEditRightsForEntry() && !odoFieldEnabled)}\n                  />\n                  <ErrorMessage showError={faultyTrip} />\n                </div>\n\n                <div className='refueling-input-block'>\n                  <div className='row-label'>\n                    KA. kulutus:\n                  </div>\n                  <Input\n                    className='refueling-input'\n                    name='avgConsumption'\n                    type='text'\n                    value={Number(avgConsumption).toFixed(2)}\n                    disabled={true}\n                    fluid={true}\n                  />\n                </div>\n\n              </Segment>\n\n              {\n                userHasEditRightsForEntry()\n                  ? null\n                  :\n                  <Message\n                    warning\n                    header='Muokkaus lukittu!'\n                    content='Vain ajoneuvon omistaja tai tankkaaja itse voi muokata merkintää.'\n                  />\n              }\n\n            </Grid.Column>\n          </Grid>\n        </Modal.Content>\n        <Modal.Actions className='refueling-modal-actions'>\n\n          <Button\n            color='blue'\n            content='Palauta'\n            icon='erase'\n            onClick={handleResetOnClick}\n            disabled={isResetDisabled()}\n          />\n\n          <Button\n            color='red'\n            content='Poista'\n            icon='delete'\n            onClick={() => setOpenDelRefuelingModal(true)}\n            disabled={!userHasEditRightsForEntry()}\n          />\n\n          <Button\n            content=\"Tallenna\"\n            icon='checkmark'\n            onClick={handleSaveOnClick}\n            positive\n            disabled={isSaveDisabled()}\n          />\n        </Modal.Actions>\n\n        <Modal\n          closeIcon={true}\n          onClose={() => setOpenDelRefuelingModal(false)}\n          onOpen={() => setOpenDelRefuelingModal(true)}\n          open={openDelRefuelingModal}\n          closeOnDimmerClick={false}\n          closeOnEscape={false}\n          size='tiny'\n          className='del-refueling-modal'\n        >\n          <Modal.Content>\n            <div className='del-refueling-modal-content'>\n              Oletko varma, että haluat poistaa tämän tankkausmerkinnän?\n            </div>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              color='black'\n              content='Peruuta'\n              onClick={handleDelCancelOnClick}\n            />\n\n            <Button\n              color='red'\n              content='Poista'\n              onClick={() => handleDelConfirmOnClick(refuelingToBeEdited.id)}\n            />\n          </Modal.Actions>\n\n        </Modal>\n\n      </Modal>\n    </>\n  );\n};\n\nexport default EditRefuelingModal;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { Grid, Header, Segment, Message, Icon } from 'semantic-ui-react';\nimport VehicleRow from './VehicleRow';\nimport { setActiveItem } from '../../reducers/naviReducer';\nimport { initListStates } from '../../reducers/listStateReducer';\nimport './RefuelingList.css';\nimport EditRefuelingModal from './EditRefuelingModal';\nimport Notification from '../Notification/Notification';\n\nconst RefuelingList = ({ user }) => {\n  const listStates = useSelector(state => state.listStates);\n  const note = useSelector(state => state.note);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // Define init states for vehicle specific refueling blocks and store the\n    // state info in Redux storage in order to keep track which block is expanded\n    // and which one is collapsed.\n    if (user.vehicles && user.vehicles.length > 0 && listStates.length === 0) {\n      const lists = user.vehicles.map(v => {\n        if (user.primaryVehicle === v.id) {\n          return { id: v.id, state: 'open' };\n        } else {\n          return { id: v.id, state: 'closed' };\n        }\n      });\n\n      dispatch(initListStates(lists));\n    }\n  },[listStates, user.vehicles, user.primaryVehicle, dispatch]);\n\n  if (!user.vehicles || user.vehicles.length === 0) {\n\n    return (\n      <Grid id='refueling-list-container' textAlign='center' verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='orange' textAlign='center'>\n            Viimeaikaiset tankkaukset\n          </Header>\n          <Message info>\n            <Icon name='exclamation' />\n            Ei lisättyjä ajoneuvoja.\n            <NavLink\n              to='/my-details'\n              className='add-new-link'\n              onClick={() => dispatch(setActiveItem('/my-details'))}\n            > Lisää uusi?</NavLink>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n\n  const OwnedVehicleBlock = () => {\n    const foundOwnedVehicles = user.vehicles.filter(vehicle =>\n      vehicle.owner.id === user.id\n    );\n\n    if (foundOwnedVehicles.length === 0) {\n      return null;\n    }\n\n    // Sort vehicles in alphabetical order.\n    foundOwnedVehicles.sort((a, b) => a.name.localeCompare(b.name));\n\n    return (\n      <>\n        <div className='sub-header'>\n          Omistamani ajoneuvot\n        </div>\n        <Segment raised>\n          {foundOwnedVehicles.map(vehicle => {\n            return <VehicleRow\n              key={vehicle.id}\n              vehicle={vehicle}\n              primary={user.primaryVehicle}\n              listStates={listStates}\n              user={user}\n            />;\n          })}\n        </Segment>\n      </>\n    );\n  };\n\n  const CoOwnedVehicleBlock = () => {\n    const foundCoOwnedVehicles = user.vehicles.filter(vehicle =>\n      vehicle.owner.id !== user.id\n    );\n\n    if (foundCoOwnedVehicles.length === 0) {\n      return null;\n    }\n\n    // Sort vehicles in alphabetical order.\n    foundCoOwnedVehicles.sort((a, b) => a.name.localeCompare(b.name));\n\n    return (\n      <>\n        <div className='sub-header'>\n          Käyttämäni ajoneuvot\n        </div>\n        <Segment raised>\n          {foundCoOwnedVehicles.map(vehicle => {\n            return <VehicleRow\n              key={vehicle.id}\n              vehicle={vehicle}\n              primary={user.primaryVehicle}\n              listStates={listStates}\n              user={user}\n            />;\n          })}\n        </Segment>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Grid id='refueling-list-container' textAlign='center' verticalAlign='middle'>\n        <Grid.Column>\n          <Header as='h2' color='orange' textAlign='center'>\n            Viimeaikaiset tankkaukset\n          </Header>\n\n          <OwnedVehicleBlock />\n\n          <CoOwnedVehicleBlock />\n\n          {note ? <Notification /> : null}\n\n        </Grid.Column>\n      </Grid>\n\n      <EditRefuelingModal />\n    </>\n  );\n};\n\nexport default RefuelingList;","import React from 'react';\nimport { Input } from 'semantic-ui-react';\n\nconst VehicleInputBlock = ({\n  label,\n  name,\n  value,\n  disabled,\n  onChange,\n  blockStyle,\n  onBlur,\n  inputError\n}) => {\n\n  return (\n    <div className={blockStyle}>\n      <div className='row-label'>\n        {label}\n      </div>\n      <Input\n        className={'add-vehicle-input'.concat(inputError ? ' error' : '')}\n        name={name}\n        type='text'\n        value={value}\n        disabled={disabled}\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n    </div>\n  );\n};\n\nexport default VehicleInputBlock;","import React from 'react';\nimport { Icon } from 'semantic-ui-react';\n\nconst VehicleCoOwnerList = ({ coOwners, onClickHandler, delDisabled }) => {\n\n  if (!coOwners || coOwners.length === 0) {\n    return (\n      <div>\n        Ajoneuvolla ei muita käyttäjiä\n      </div>\n    );\n  }\n\n  const coOwnerTags = coOwners.map(c => {\n    return (\n      <div key={c.id} className={'co-owner-tag-item'.concat(delDisabled ? ' del-disabled' : '')}>\n        <div>{c.name}</div>\n        { // Only owner of vehicle is allowed to remove co-owners.\n          delDisabled\n            ? null\n            : <div><Icon name='delete' color='grey' onClick={() => onClickHandler(c)} /></div>\n        }\n      </div>\n    );\n  });\n\n  return (\n    <div className='co-owner-tag-container'>\n      {coOwnerTags}\n    </div>\n  );\n};\n\nexport default VehicleCoOwnerList;","import React from 'react';\nimport { Input, Button } from 'semantic-ui-react';\nimport VehicleCoOwnerList from './VehicleCoOwnerList';\n\nconst VehicleCoOwnersBlock = ({\n  delDisabled,\n  coOwner,\n  coOwners,\n  handleDelCoOwnerOnClick,\n  handleCoOwnerONChange,\n  handleAddCoOwnerOnClick\n}) => {\n\n  return (\n    <div>\n      <div>\n        <div className='row-label'>\n          Ajoneuvon muut käyttäjät:\n        </div>\n        <VehicleCoOwnerList\n          delDisabled={delDisabled}\n          coOwners={coOwners}\n          onClickHandler={handleDelCoOwnerOnClick}\n        />\n      </div>\n\n      { // Only owner of vehicle is allowed to add new co-owners.\n        delDisabled\n          ? null\n          :\n          <div className='co-owner-container'>\n            <Input\n              className='co-owner-item'\n              name='coOwner'\n              type='text'\n              value={coOwner}\n              placeholder='Käyttäjätunnus'\n              onChange={handleCoOwnerONChange}\n            />\n            <Button\n              content='Lisää'\n              disabled={!coOwner ? true : false}\n              onClick={handleAddCoOwnerOnClick}\n            />\n          </div>\n      }\n\n    </div>\n  );\n};\n\nexport default VehicleCoOwnersBlock;","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Button,\n  Modal,\n  Grid,\n  Segment,\n  Checkbox,\n  Message\n} from 'semantic-ui-react';\nimport { clearNotification, setNotification } from '../../reducers/notificationReducer';\nimport { addVehicleToUser } from '../../reducers/userReducer';\nimport Notification from '../Notification/Notification';\nimport VehicleInputBlock from './VehicleInputBlock';\nimport VehicleCoOwnerBlock from './VehicleCoOwnersBlock';\n\nconst AddVehicleModal = ({ user, users }) => {\n  const [open, setOpen] = useState(false);\n  const [name, setName] = useState('');\n  const [faultyName, setFaultyName] = useState({ state: false, text: '' });\n  const [licensePlateId, setLicensePlateId] = useState('');\n  const [faultyLPId, setFaultyLPId] = useState({ state: false, text: '' });\n  const [odoMeter, setOdoMeter] = useState('');\n  const [faultyOdo, setFaultyOdo] = useState({ state: false, text: '' });\n  const [coOwner, setCoOwner] = useState('');\n  const [coOwners, setCoOwners] = useState([]);\n  const [primaryVehicle, setPrimaryVehicle] = useState(false);\n  const note = useSelector(state => state.note);\n  const dispatch = useDispatch();\n\n  // Aux function to reset all local storeges of the component.\n  const resetAllStates = () => {\n    dispatch(clearNotification());\n    setName('');\n    setLicensePlateId('');\n    setOdoMeter('');\n    setCoOwner('');\n    setCoOwners([]);\n    setPrimaryVehicle(false);\n    setFaultyName({ state: false, text: '' });\n    setFaultyLPId({ state: false, text: '' });\n    setFaultyOdo({ state: false, text: '' });\n  };\n\n  const handleCancelOnClick = () => {\n    resetAllStates();\n    setOpen(false);\n  };\n\n  const handleResetOnClick = () => {\n    resetAllStates();\n  };\n\n  const handleSaveOnClick = () => {\n    if (!name || !licensePlateId || !odoMeter) {\n      dispatch(setNotification({\n        type: 'error',\n        header: undefined,\n        content: 'Virheellinen syöte',\n        timeout: 3.5\n      }));\n\n    } else {\n      dispatch(addVehicleToUser({\n        vehicle: {\n          name,\n          licensePlateId,\n          odoMeter,\n          coOwners: coOwners.map(c => c.id)\n        },\n        primaryVehicle\n      }));\n\n      setName('');\n      setLicensePlateId('');\n      setOdoMeter('');\n      setCoOwner('');\n      setCoOwners([]);\n      setPrimaryVehicle(false);\n      setOpen(false);\n    }\n  };\n\n  const handleAddCoOwnerOnClick = (e) => {\n\n    // Make sure that given co-owner is not user himself.\n    if (coOwner !== user.username) {\n\n      // Make sure that given co-owner hasn't been added already.\n      const coOwnerFound = coOwners.find(c => c.username === coOwner);\n      if (!coOwnerFound) {\n\n        // Make sure that given co-owner can be found from the service.\n        const userFound = users.find(u => u.username === coOwner );\n        if (userFound) {\n\n          // Add new co-owner in the list and render it on the screen.\n          const updatedCoOwners = [...coOwners];\n          updatedCoOwners.push(userFound);\n          setCoOwners(updatedCoOwners);\n          setCoOwner('');\n\n        } else {\n          dispatch(setNotification({\n            type: 'error',\n            header: undefined,\n            content: `Käyttäjää '${coOwner}' ei löydy. Tarkista antamasi tunnus.`,\n            timeout: 3.5\n          }));\n        }\n\n      } else {\n        dispatch(setNotification({\n          type: 'error',\n          header: undefined,\n          content: `Käyttäjä '${coOwnerFound.name}' on jo lisätty ajoneuvon toiseksi käyttäjäksi.`,\n          timeout: 3.5\n        }));\n      }\n\n    } else {\n      dispatch(setNotification({\n        type: 'error',\n        header: undefined,\n        content: 'Ajoneuvon omistajana et voi asettaa itseäsi toiseksi käyttäjäksi.',\n        timeout: 3.5\n      }));\n    }\n  };\n\n  const handleDelCoOwnerOnClick = (user) => {\n    let updatedCoOwners = [...coOwners];\n    updatedCoOwners = updatedCoOwners.filter(c => c.id !== user.id);\n    setCoOwners(updatedCoOwners);\n  };\n\n  const handlePrimaryVehicleOnChange = () => {\n    primaryVehicle\n      ? setPrimaryVehicle(false)\n      : setPrimaryVehicle(true);\n  };\n\n  // Validator function for odometer input field.\n  const handleVehicleNameOnBlur = () => {\n    setFaultyName({ state: false, text: '' });\n\n    if (!name) {\n      setFaultyName({ state: true, text: 'Kenttä ei saa olla tyhjä.' });\n    } else if (!(/^[\\w]*(([a-zA-ZäöåÄÖÅ]+)|( )|(-))[\\w]*$/).test(name)) {\n      setFaultyName({ state: true, text: 'Nimi saa sisältää vain kirjaimia ja numeroita sekä yhden välilyönnin tai -viivan.' });\n    } else if (name.length < 4) {\n      setFaultyName({ state: true, text: 'Nimen oltava vähintään 4 merkkiä pitkä.' });\n    } else if (name.length > 20) {\n      setFaultyName({ state: true, text: 'Nimen enimmäispituus on 20 merkkiä.' });\n    }\n  };\n\n  // Validator function for license plate id input field.\n  const handleLPIdOnBlur = () => {\n    setFaultyLPId({ state: false, text: '' });\n\n    if (!licensePlateId) {\n      setFaultyLPId({ state: true, text: 'Kenttä ei saa olla tyhjä.' });\n    } else if (!(/(^[\\D]{2,3}(-)[\\d]{1,3}$)|(^[C][D](-)[\\d]{1,4}$)/).test(licensePlateId)) {\n      setFaultyLPId({ state: true, text: 'Rekisteritunnus tulee olla muodossa 2-3 kirjainta, väliviiva ja 1-3 numeroa (CD-alkuisena sallitaan 4 numeroa).' });\n    }\n  };\n\n  // Validator function for odometer input field.\n  const handleOdoMeterOnBlur = () => {\n    setFaultyOdo({ state: false, text: '' });\n\n    if (!odoMeter) {\n      setFaultyOdo({ state: true, text: 'Kenttä ei saa olla tyhjä.' });\n    } else if (isNaN(odoMeter)) {\n      setFaultyOdo({ state: true, text: 'Matkamittarin lukema tulee olla numeerinen.' });\n    } else if (Number(odoMeter) < 0) {\n      setFaultyOdo({ state: true, text: 'Matkamittarin lukema ei saa olla negatiivinen.' });\n    } else if (Number(odoMeter) > 5000000) {\n      setFaultyOdo({ state: true, text: 'Matkamittarin lukema ei saa olla yli 5 000 000 km.' });\n    }\n  };\n\n  // Aux function to identify is the new vehicle entry ready for saving.\n  // This is used for controlling is the SAVE button enabled or disabled.\n  const isEntryReadyForSave = () => {\n    if (\n      name && !faultyName.state &&\n      licensePlateId && !faultyLPId.state &&\n      odoMeter && !faultyOdo.state\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <Modal\n      closeIcon={true}\n      onClose={() => {\n        setOpen(false);\n        dispatch(clearNotification());\n      }}\n      onOpen={() => setOpen(true)}\n      open={open}\n      size='tiny'\n      closeOnDimmerClick={false}\n      closeOnEscape={false}\n      trigger={\n        <Button\n          color='blue'\n          content='Lisää ajoneuvo'\n          onClick={() => dispatch(clearNotification())}\n        />\n      }\n    >\n      <Modal.Header>Lisää ajoneuvo</Modal.Header>\n      <Modal.Content>\n        <Grid textAlign='center' verticalAlign='top'>\n          <Grid.Column style={{ maxWidth: 400 }}>\n            <Segment raised>\n\n              <div className='vehicle-name-container'>\n                <VehicleInputBlock\n                  label='Ajoneuvon nimi:'\n                  name='name'\n                  value={name}\n                  disabled={false}\n                  onChange={(e) => setName(e.target.value)}\n                  onBlur={handleVehicleNameOnBlur}\n                  blockStyle='vehicle-name'\n                  inputError={faultyName.state}\n                />\n                <Checkbox\n                  label='Ensisijainen'\n                  className='primary-checkbox'\n                  onChange={() => handlePrimaryVehicleOnChange()}\n                />\n              </div>\n\n              {\n                faultyName.state\n                  ? <Message error content={faultyName.text} />\n                  : null\n              }\n\n              <VehicleInputBlock\n                label='Rekisterinumero:'\n                name='licensePlateId'\n                value={licensePlateId}\n                disabled={false}\n                onChange={(e) => setLicensePlateId(e.target.value)}\n                onBlur={handleLPIdOnBlur}\n                inputError={faultyLPId.state}\n              />\n\n              {\n                faultyLPId.state\n                  ? <Message error content={faultyLPId.text} />\n                  : null\n              }\n\n              <VehicleInputBlock\n                label='Matkamittarin lukema:'\n                name='odoMeter'\n                value={odoMeter}\n                disabled={false}\n                onChange={(e) => setOdoMeter(e.target.value)}\n                onBlur={handleOdoMeterOnBlur}\n                inputError={faultyOdo.state}\n              />\n\n              {\n                faultyOdo.state\n                  ? <Message error content={faultyOdo.text} />\n                  : null\n              }\n\n\n              <VehicleCoOwnerBlock\n                coOwner={coOwner}\n                coOwners={coOwners}\n                handleDelCoOwnerOnClick={handleDelCoOwnerOnClick}\n                handleCoOwnerONChange={(e) => setCoOwner(e.target.value)}\n                handleAddCoOwnerOnClick={handleAddCoOwnerOnClick}\n              />\n\n              {note ? <Notification /> : null}\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </Modal.Content>\n      <Modal.Actions className='vehicle-modal-actions'>\n        <Button\n          color='black'\n          content='Peruuta'\n          icon='cancel'\n          onClick={() => handleCancelOnClick()}\n        />\n\n        <Button\n          color='blue'\n          content='Tyhjennä'\n          icon='erase'\n          onClick={(e) => handleResetOnClick(e)}\n        />\n\n        <Button\n          content=\"Tallenna\"\n          icon='checkmark'\n          onClick={() => handleSaveOnClick()}\n          positive\n          disabled={!isEntryReadyForSave()}\n        />\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default AddVehicleModal;","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Button,\n  Modal,\n  Grid,\n  Segment,\n  Message,\n  Checkbox,\n  Icon\n} from 'semantic-ui-react';\nimport { updateUserVehicle, removeVehicleFromUser } from '../../reducers/userReducer';\nimport { clearNotification, setNotification } from '../../reducers/notificationReducer';\nimport Notification from '../Notification/Notification';\nimport VehicleInputBlock from './VehicleInputBlock';\nimport VehicleCoOwnerBlock from './VehicleCoOwnersBlock';\n\nconst EditVehicleModal = ({ vehicle, user, users }) => {\n  const [openEditVehicleModal, setOpenEditVehicleModal] = useState(false);\n  const [openDelVehicleModal, setOpenDelVehicleModal] = useState(false);\n  const [name, setName] = useState('');\n  const [faultyName, setFaultyName] = useState({ state: false, text: '' });\n  const [licensePlateId, setLicensePlateId] = useState('');\n  const [faultyLPId, setFaultyLPId] = useState({ state: false, text: '' });\n  const [odoMeter, setOdoMeter] = useState('');\n  const [faultyOdo, setFaultyOdo] = useState({ state: false, text: '' });\n  const [showDelConfirmation, setShowDelConfirmation] = useState(false);\n  const [coOwner, setCoOwner] = useState('');\n  const [coOwners, setCoOwners] = useState([]);\n  const [originalPrimarySelection, setOriginalPrimarySelection] = useState(false);\n  const [primarySelection, setPrimarySelection] = useState(false);\n  const note = useSelector(state => state.note);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // These properties are initialized only when the EditVehicle modal is opened.\n    if (openEditVehicleModal) {\n      if (user.primaryVehicle === vehicle.id) {\n        setOriginalPrimarySelection(true);\n        setPrimarySelection(true);\n      } else {\n        setOriginalPrimarySelection(false);\n        setPrimarySelection(false);\n      }\n\n      setName(vehicle.name);\n      setLicensePlateId(vehicle.licensePlateId);\n      setOdoMeter(vehicle.odoMeter);\n      setCoOwners(vehicle.coOwners);\n      setShowDelConfirmation(false);\n    }\n  },[user, openEditVehicleModal, vehicle]);\n\n  const handleCancelOnClick = () => {\n    dispatch(clearNotification());\n    setName('');\n    setLicensePlateId('');\n    setOdoMeter('');\n    setCoOwner('');\n    setCoOwners([]);\n    setPrimarySelection(false);\n    setOriginalPrimarySelection(false);\n    setShowDelConfirmation(false);\n    setFaultyName({ state: false, text: '' });\n    setFaultyLPId({ state: false, text: '' });\n    setFaultyOdo({ state: false, text: '' });\n\n    setOpenEditVehicleModal(false);\n  };\n\n  const handleResetOnClick = () => {\n    if (user.primaryVehicle === vehicle.id) {\n      setOriginalPrimarySelection(true);\n      setPrimarySelection(true);\n    } else {\n      setOriginalPrimarySelection(false);\n      setPrimarySelection(false);\n    }\n\n    setName(vehicle.name);\n    setLicensePlateId(vehicle.licensePlateId);\n    setOdoMeter(vehicle.odoMeter);\n    setCoOwners(vehicle.coOwners);\n    setShowDelConfirmation(false);\n    setFaultyName({ state: false, text: '' });\n    setFaultyLPId({ state: false, text: '' });\n    setFaultyOdo({ state: false, text: '' });\n  };\n\n  // Aux function for providing correct primary vehicle value\n  // for the update request sent to server.\n  const getPrimaryVehicle = () => {\n    if (primarySelection) {\n      // User selected this vehicle as primary.\n      return vehicle.id;\n    } else if (!primarySelection && user.primaryVehicle === vehicle.id) {\n      // This was user's primary vehicle and he removed primary tag\n      // -> user does not have any primary vehicle now.\n      return '';\n    } else {\n      // User didn't do any changes on primary vehicle settings\n      // -> keep the current setting.\n      return user.primaryVehicle;\n    }\n  };\n\n  const handleSaveOnClick = async () => {\n    if (!name || !licensePlateId || !odoMeter) {\n      dispatch(setNotification({\n        type: 'error',\n        header: undefined,\n        content: 'Virheellinen syöte',\n        timeout: 3.5\n      }));\n    } else {\n\n      dispatch(updateUserVehicle({\n        vehicle: {\n          id: vehicle.id,\n          name,\n          licensePlateId,\n          odoMeter,\n          coOwners: coOwners.map(c => c.id)\n        },\n        primaryVehicle: getPrimaryVehicle()\n      }));\n\n      setName('');\n      setLicensePlateId('');\n      setOdoMeter('');\n      setCoOwner('');\n      setCoOwners([]);\n      setPrimarySelection(false);\n      setOriginalPrimarySelection(false);\n\n      setOpenEditVehicleModal(false);\n      setShowDelConfirmation(false);\n    }\n  };\n\n  const handleDelCancelOnClick = (e) => {\n    e.stopPropagation();\n    if (e.target === e.currentTarget) {\n      setOpenDelVehicleModal(false);\n    }\n  };\n\n  const handleDelConfirmOnClick = () => {\n    dispatch(removeVehicleFromUser(vehicle.id));\n    setName('');\n    setLicensePlateId('');\n    setOdoMeter('');\n    setOpenDelVehicleModal(false);\n    setOpenEditVehicleModal(false);\n  };\n\n  const handleAddCoOwnerOnClick = (e) => {\n\n    // Make sure that given co-owner is not user himself.\n    if (coOwner !== user.username) {\n\n      // Make sure that given co-owner hasn't been added already.\n      const coOwnerFound = coOwners.find(c => c.username === coOwner);\n      if (!coOwnerFound) {\n\n        // Make sure that given co-owner can be found from the service.\n        const userFound = users.find(u => u.username === coOwner );\n        if (userFound) {\n\n          // Add new co-owner in the list and render it on the screen.\n          const updatedCoOwners = [...coOwners];\n          updatedCoOwners.push(userFound);\n          setCoOwners(updatedCoOwners);\n          setCoOwner('');\n\n        } else {\n          dispatch(setNotification({\n            type: 'error',\n            header: undefined,\n            content: `Käyttäjää '${coOwner}' ei löydy. Tarkista antamasi tunnus.`,\n            timeout: 3.5\n          }));\n        }\n\n      } else {\n        dispatch(setNotification({\n          type: 'error',\n          header: undefined,\n          content: `Käyttäjä '${coOwnerFound.name}' on jo lisätty ajoneuvon toiseksi käyttäjäksi.`,\n          timeout: 3.5\n        }));\n      }\n\n    } else {\n      dispatch(setNotification({\n        type: 'error',\n        header: undefined,\n        content: 'Ajoneuvon omistajana et voi asettaa itseäsi toiseksi käyttäjäksi.',\n        timeout: 3.5\n      }));\n    }\n  };\n\n  const handleDelCoOwnerOnClick = (user) => {\n    let updatedCoOwners = [...coOwners];\n    updatedCoOwners = updatedCoOwners.filter(c => c.id !== user.id);\n    setCoOwners(updatedCoOwners);\n  };\n\n  const handlePrimaryVehicleOnChange = () => {\n    primarySelection\n      ? setPrimarySelection(false)\n      : setPrimarySelection(true);\n  };\n\n  // Validator function for odometer input field.\n  const handleVehicleNameOnBlur = () => {\n    setFaultyName({ state: false, text: '' });\n\n    if (!name) {\n      setFaultyName({ state: true, text: 'Kenttä ei saa olla tyhjä.' });\n    } else if (name === vehicle.name) {\n      setFaultyName({ state: true, text: 'Uusi nimi on sama kuin vanha.' });\n    } else if (!(/^[\\w]*(([a-zA-ZäöåÄÖÅ]+)|( )|(-))[\\w]*$/).test(name)) {\n      setFaultyName({ state: true, text: 'Nimi saa sisältää vain kirjaimia ja numeroita sekä yhden välilyönnin tai -viivan.' });\n    } else if (name.length < 4) {\n      setFaultyName({ state: true, text: 'Nimen oltava vähintään 4 merkkiä pitkä.' });\n    } else if (name.length > 20) {\n      setFaultyName({ state: true, text: 'Nimen enimmäispituus on 20 merkkiä.' });\n    }\n  };\n\n  // Validator function for license plate id input field.\n  const handleLPIdOnBlur = () => {\n    setFaultyLPId({ state: false, text: '' });\n\n    if (!licensePlateId) {\n      setFaultyLPId({ state: true, text: 'Kenttä ei saa olla tyhjä.' });\n    } else if (licensePlateId === vehicle.licensePlateId) {\n      setFaultyLPId({ state: true, text: 'Uusi rekisteritunnus on sama kuin vanha.' });\n    } else if (!(/(^[\\D]{2,3}(-)[\\d]{1,3}$)|(^[C][D](-)[\\d]{1,4}$)/).test(licensePlateId)) {\n      setFaultyLPId({ state: true, text: 'Rekisteritunnus tulee olla muodossa 2-3 kirjainta, väliviiva ja 1-3 numeroa (CD-alkuisena sallitaan 4 numeroa).' });\n    }\n  };\n\n  // Validator function for odometer input field.\n  const handleOdoMeterOnBlur = () => {\n    setFaultyOdo({ state: false, text: '' });\n\n    if (!odoMeter) {\n      setFaultyOdo({ state: true, text: 'Kenttä ei saa olla tyhjä.' });\n    } else if (odoMeter === vehicle.odoMeter) {\n      setFaultyOdo({ state: true, text: 'Uusi matkamittarin lukema on sama kuin vanha.' });\n    } else if (isNaN(odoMeter)) {\n      setFaultyOdo({ state: true, text: 'Matkamittarin lukema tulee olla numeerinen.' });\n    } else if (Number(odoMeter) < 0) {\n      setFaultyOdo({ state: true, text: 'Matkamittarin lukema ei saa olla negatiivinen.' });\n    } else if (Number(odoMeter) > 5000000) {\n      setFaultyOdo({ state: true, text: 'Matkamittarin lukema ei saa olla yli 5 000 000 km.' });\n    }\n  };\n\n  // Aux function to identify is the new vehicle entry ready for saving.\n  // This is used for controlling is the SAVE button enabled or disabled.\n  const isEntryReadyForSave = () => {\n    if (\n      (name && !faultyName.state && name !== vehicle.name) ||\n      (licensePlateId && !faultyLPId.state && licensePlateId !== vehicle.licensePlateId) ||\n      (odoMeter && !faultyOdo.state && odoMeter !== vehicle.odoMeter) ||\n      (primarySelection !== originalPrimarySelection &&\n      (!faultyName.state && !faultyLPId.state && !faultyOdo.state)) ||\n      JSON.stringify(coOwners) !== JSON.stringify(vehicle.coOwners)\n    ) {\n      return true;\n    }\n\n    return false;\n  };\n\n  // Aux function for identifying is the RESET button enabled or disabled.\n  // (Reset button is active only if value in any input field has been\n  // changed OR any input error message is available).\n  const isResetDisabled = () => {\n    if (\n      name === vehicle.name &&\n      primarySelection === originalPrimarySelection &&\n      licensePlateId === vehicle.licensePlateId &&\n      odoMeter === vehicle.odoMeter &&\n      JSON.stringify(coOwners) === JSON.stringify(vehicle.coOwners) &&\n      !faultyName.state &&\n      !faultyLPId.state &&\n      !faultyOdo.state\n    ) {\n      return true;\n\n    }\n\n    return false;\n  };\n\n  return (\n    <Modal\n      closeIcon={true}\n      onClose={() => handleCancelOnClick()}\n      onOpen={() => setOpenEditVehicleModal(true)}\n      open={openEditVehicleModal}\n      closeOnDimmerClick={false}\n      closeOnEscape={false}\n      trigger={\n        <div className='data-row' onClick={() => dispatch(clearNotification())}>\n          {\n            user.primaryVehicle === vehicle.id\n              ? <Icon className='primary-vehicle-icon' name='star' />\n              : null\n          }\n          {vehicle.name} ({vehicle.licensePlateId})\n        </div>}\n      size='tiny'\n    >\n      <Modal.Header>Muokkaa ajoneuvoa</Modal.Header>\n      <Modal.Content>\n        <Grid textAlign='center' verticalAlign='top'>\n          <Grid.Column style={{ maxWidth: 400 }}>\n            <Segment raised>\n\n              <div className='vehicle-name-container'>\n                <VehicleInputBlock\n                  label='Ajoneuvon nimi:'\n                  name='name'\n                  value={name}\n                  disabled={user.id !== vehicle.owner.id ? true : showDelConfirmation}\n                  onChange={(e) => setName(e.target.value)}\n                  onBlur={handleVehicleNameOnBlur}\n                  blockStyle='vehicle-name'\n                  inputError={faultyName.state}\n                />\n                <Checkbox\n                  label='Ensisijainen'\n                  checked={primarySelection}\n                  className='primary-checkbox'\n                  onChange={() => handlePrimaryVehicleOnChange()}\n                />\n              </div>\n\n              {\n                faultyName.state\n                  ? <Message error content={faultyName.text} />\n                  : null\n              }\n\n              <VehicleInputBlock\n                label='Rekisterinumero:'\n                name='licensePlateId'\n                value={licensePlateId}\n                disabled={user.id !== vehicle.owner.id ? true : showDelConfirmation}\n                onChange={(e) => setLicensePlateId(e.target.value)}\n                onBlur={handleLPIdOnBlur}\n                inputError={faultyLPId.state}\n              />\n\n              {\n                faultyLPId.state\n                  ? <Message error content={faultyLPId.text} />\n                  : null\n              }\n\n              <VehicleInputBlock\n                label='Matkamittarin lukema:'\n                name='odoMeter'\n                value={odoMeter}\n                disabled={user.id !== vehicle.owner.id ? true : showDelConfirmation}\n                onChange={(e) => setOdoMeter(e.target.value)}\n                onBlur={handleOdoMeterOnBlur}\n                inputError={faultyOdo.state}\n              />\n\n              {\n                faultyOdo.state\n                  ? <Message error content={faultyOdo.text} />\n                  : null\n              }\n\n              <VehicleInputBlock\n                label='Ajoneuvon omistaja:'\n                name='owner'\n                value={vehicle.owner.name}\n                disabled={true}\n              />\n\n              <VehicleCoOwnerBlock\n                delDisabled={user.id !== vehicle.owner.id ? true : false}\n                coOwner={coOwner}\n                coOwners={coOwners}\n                handleDelCoOwnerOnClick={handleDelCoOwnerOnClick}\n                handleCoOwnerONChange={(e) => setCoOwner(e.target.value)}\n                handleAddCoOwnerOnClick={handleAddCoOwnerOnClick}\n              />\n\n              {note ? <Notification /> : null}\n\n            </Segment>\n\n            {\n              user.id === vehicle.owner.id\n                ? null\n                :\n                <Message\n                  warning\n                  header='Muokkaus lukittu!'\n                  content='Ajoneuvon käyttäjänä voit muokata vain Ensisijainen-tietoa. Muiden tietojen muokkaus edellyttää Omistaja-roolia.'\n                />\n            }\n\n          </Grid.Column>\n        </Grid>\n      </Modal.Content>\n      <Modal.Actions className='vehicle-modal-actions'>\n        <Button\n          color='blue'\n          content='Palauta'\n          icon='erase'\n          onClick={handleResetOnClick}\n          disabled={isResetDisabled()}\n        />\n\n        <Button\n          color='red'\n          content='Poista'\n          icon='delete'\n          disabled={user.id !== vehicle.owner.id ? true : false}\n          onClick={() => setOpenDelVehicleModal(true)}\n        />\n\n        <Button\n          content=\"Tallenna\"\n          icon='checkmark'\n          onClick={handleSaveOnClick}\n          positive\n          disabled={!isEntryReadyForSave()}\n        />\n      </Modal.Actions>\n\n      <Modal\n        closeIcon={true}\n        onClose={() => setOpenDelVehicleModal(false)}\n        onOpen={() => setOpenDelVehicleModal(true)}\n        open={openDelVehicleModal}\n        closeOnDimmerClick={false}\n        closeOnEscape={false}\n        size='tiny'\n        className='del-vehicle-modal'\n      >\n        <Modal.Content>\n          <div className='del-vehicle-modal-content'>\n            Oletko varma, että haluat poistaa tämän ajoneuvon ja kaikki siihen liittyvät tankkaukset?\n          </div>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            color='black'\n            content='Peruuta'\n            onClick={handleDelCancelOnClick}\n          />\n\n          <Button\n            color='red'\n            content='Poista'\n            onClick={handleDelConfirmOnClick}\n          />\n        </Modal.Actions>\n      </Modal>\n\n    </Modal>\n  );\n};\n\nexport default EditVehicleModal;","import React from 'react';\nimport EditVehicleModal from './EditVehicleModal';\n\nconst VehicleList = ({ user, users }) => {\n\n  if (Object.keys(user).length === 0) {\n    return null;\n  }\n\n  if (user.vehicles.length === 0) {\n    return (\n      <div className='my-details-row'>\n        Ei ajoneuvoja\n      </div>\n    );\n  }\n\n  // Sort vehicle by name in alphabetical descending order.\n  user.vehicles.sort((a, b) => a.name.localeCompare(b.name));\n\n  return (\n    <>\n      <div className='my-details-row' >\n        {\n          user.vehicles.map((v, i) => {\n            return <EditVehicleModal\n              key={v.id}\n              vehicle={v}\n              user={user}\n              users={users}\n            />;\n          })\n        }\n      </div>\n    </>\n  );\n};\n\nexport default VehicleList;","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Button,\n  Modal,\n  Input,\n  Grid,\n  Segment\n} from 'semantic-ui-react';\nimport userService from '../../services/users';\nimport loginService from '../../services/login';\nimport { clearNotification, setNotification } from '../../reducers/notificationReducer';\nimport Notification from '../Notification/Notification';\n\nconst ChangePwdModal = ({ user }) => {\n  const [openModal, setOpenModal] = useState(false);\n  const [currentPwd, setCurrentPwd] = useState('');\n  const [newPwd, setNewPwd] = useState('');\n  const [confirmPwd, setConfirmPwd] = useState('');\n  const note = useSelector(state => state.note);\n\n  const dispatch = useDispatch();\n\n  const handleCancelOnClick = () => {\n    dispatch(clearNotification());\n    setCurrentPwd('');\n    setNewPwd('');\n    setConfirmPwd('');\n    setOpenModal(false);\n  };\n\n  const handleSaveOnClick = async (event) => {\n    dispatch(clearNotification());\n    event.preventDefault();\n\n    // Ensure that all input fields are filled.\n    if (!currentPwd || !newPwd || !confirmPwd) {\n      dispatch(setNotification({\n        type: 'error',\n        header: undefined,\n        content: 'Virhe! Kaikki kolme kenttää on täytettävä.',\n        timeout: 3.5\n      }));\n\n    // All fields filled -> let's verify inputs.\n    } else  {\n\n      // Ensure that the current password is valid.\n      const result = await loginService.verifyPwd({ user: { password: currentPwd } });\n      if (!result) {\n        dispatch(setNotification({\n          type: 'error',\n          header: undefined,\n          content: 'Nykyinen salasana on virheellinen.',\n          timeout: 3.5\n        }));\n\n      // Ensure that new password fulfills criterias.\n      } else if (!/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,12}/.test(newPwd)) {\n        dispatch(setNotification({\n          type: 'error',\n          header: undefined,\n          content: 'Uuden salasanan tulee olla 6-12 merkkiä pitkä ja siinä oltava vähintään yksi kirjain, yksi numero ja yksi erikoismerkki.',\n          timeout: 3.5\n        }));\n\n      // Ensure that new password and confirmation are same.\n      } else if (newPwd !== confirmPwd) {\n        dispatch(setNotification({\n          type: 'error',\n          header: undefined,\n          content: 'Salasana ja sen toisto eivät vastaa toisiaan.',\n          timeout: 3.5\n        }));\n\n      // Ensure that new password is different than the current one.\n      } else if (newPwd === currentPwd) {\n        dispatch(setNotification({\n          type: 'error',\n          header: undefined,\n          content: 'Uusi salasana on sama kuin nykyinen.',\n          timeout: 3.5\n        }));\n\n      // Verification OK -> let's set the new password.\n      } else {\n        const result = await userService.updateUser({ user: { password: newPwd } });\n\n        if (result) {\n          dispatch(setNotification({\n            type: 'info',\n            header: undefined,\n            content: 'Salasana vaihdettu onnistuneesti.',\n            timeout: 3.5\n          }));\n\n          setCurrentPwd('');\n          setNewPwd('');\n          setConfirmPwd('');\n\n        } else {\n          dispatch(setNotification({\n            type: 'error',\n            header: undefined,\n            content: 'Palvelinvirhe! Salasanan vaihto epäonnistui. Yritä myöhemmin uudelleen.',\n            timeout: 3.5\n          }));\n        }\n      }\n    }\n  };\n\n  return (\n    <Modal\n      closeIcon={true}\n      onClose={() => {\n        setOpenModal(false);\n        setCurrentPwd('');\n        setNewPwd('');\n        setConfirmPwd('');\n        dispatch(clearNotification());\n      }}\n      onOpen={() => setOpenModal(true)}\n      open={openModal}\n      size='tiny'\n      closeOnDimmerClick={false}\n      closeOnEscape={false}\n      trigger={\n        <div\n          className='data-row'\n          onClick={() => dispatch(clearNotification())}\n        >\n          Vaihda salasana\n        </div>\n      }\n    >\n      <Modal.Header>Vaihda salasana</Modal.Header>\n      <Modal.Content>\n        <Grid textAlign='center' verticalAlign='top'>\n          <Grid.Column style={{ maxWidth: 400 }}>\n            <Segment raised>\n              <div>\n                <div className='row-label'>\n                  Nykyinen salasana:\n                </div>\n                <Input\n                  className='change-pwd-input'\n                  name='currentPwd'\n                  type='password'\n                  value={currentPwd}\n                  onChange={(e) => setCurrentPwd(e.target.value)}\n                />\n              </div>\n              <div>\n                <div className='row-label'>\n                  Uusi salasana:\n                </div>\n                <Input\n                  className='change-pwd-input'\n                  name='newPwd'\n                  type='password'\n                  value={newPwd}\n                  onChange={(e) => setNewPwd(e.target.value)}\n                />\n              </div>\n              <div>\n                <div className='row-label'>\n                  Toista uusi salasana:\n                </div>\n                <Input\n                  className='change-pwd-input'\n                  name='confirmPwd'\n                  type='password'\n                  value={confirmPwd}\n                  onChange={(e) => setConfirmPwd(e.target.value)}\n                />\n              </div>\n              {note ? <Notification /> : null}\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          content='Peruuta'\n          color='black'\n          icon='cancel'\n          onClick={handleCancelOnClick}\n        />\n\n        <Button\n          content=\"Tallenna\"\n          icon='checkmark'\n          onClick={handleSaveOnClick}\n          positive\n          disabled={(currentPwd === '' && newPwd === '' && confirmPwd === '') ? true : false }\n        />\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default ChangePwdModal;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Button,\n  Modal,\n  Grid,\n  Message,\n  Icon\n} from 'semantic-ui-react';\nimport Notification from '../Notification/Notification';\nimport { clearNotification } from '../../reducers/notificationReducer';\nimport { removeUserAccount } from '../../reducers/userReducer';\n\nconst RemoveAccountModal = () => {\n  const [openModal, setOpenModal] = useState(false);\n  const [actionButtonsDisabled, setActionButtonDisabled] = useState(false);\n  const note = useSelector(state => state.note);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!note) {\n      // Re-active modal action buttons again when the removal note\n      // has been cleared.\n      setActionButtonDisabled(false);\n    }\n  },[note]);\n\n  const handleCancelOnClick = () => {\n    setOpenModal(false);\n  };\n\n  const handleDelOnClick = () => {\n    // Disable modal action buttons until the removal note has been cleared.\n    setActionButtonDisabled(true);\n    dispatch(removeUserAccount());\n  };\n\n  return (\n    <Modal\n      closeIcon={true}\n      onClose={() => {\n        setOpenModal(false);\n        dispatch(clearNotification());\n      }}\n      onOpen={() => setOpenModal(true)}\n      open={openModal}\n      size='tiny'\n      closeOnDimmerClick={false}\n      closeOnEscape={false}\n      trigger={\n        <div\n          className='data-row'\n          onClick={() => dispatch(clearNotification())}\n        >\n          Poista tunnus\n        </div>\n      }\n    >\n      <Modal.Header>Poista käyttäjätunnus</Modal.Header>\n      <Modal.Content>\n        <Grid textAlign='center' verticalAlign='top'>\n          <Grid.Column>\n\n            <Message icon color='red'>\n              <Icon name='warning sign' />\n              <Message.Content style={{ textAlign: 'left' }}>\n                <Message.Header>\n                  Varoitus!\n                </Message.Header>\n                Oletko varma, että haluat poistaa käyttäjätunnuksesi ja kaikki\n                siihen liitetyt ajoneuvot ja niiden tankkaukset?\n              </Message.Content>\n            </Message>\n\n            {note ? <Notification /> : null}\n\n          </Grid.Column>\n        </Grid>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          color='black'\n          content='Peruuta'\n          icon='cancel'\n          onClick={handleCancelOnClick}\n          disabled={actionButtonsDisabled}\n        />\n\n        <Button\n          color='red'\n          content='Poista'\n          icon='trash alternate'\n          onClick={handleDelOnClick}\n          disabled={actionButtonsDisabled}\n        />\n\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default RemoveAccountModal;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Grid,\n  Header,\n  Segment,\n  Divider\n} from 'semantic-ui-react';\nimport AddVechicleModal from './AddVehicleModal';\nimport VehicleList from './VehicleList';\nimport Notification from '../Notification/Notification';\nimport ChangePwdModal from './ChangePwdModal';\nimport { initSimpleUserList } from '../../reducers/usersReducer';\nimport './MyDetails.css';\nimport RemoveAccountModal from './RemoveAccountModal';\n\nconst MyDetails = ({ user }) => {\n  const note = useSelector(state => state.note);\n  const users = useSelector(state => state.users);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // Simple user list (for processing co-owners) is initialized only if the\n    // list is empty AND logged in user details (including token) are available\n    if (users.length === 0 && Object.keys(user).length !== 0) {\n      dispatch(initSimpleUserList());\n    }\n  },[users, user, dispatch]);\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <div>\n      <Grid textAlign='center' verticalAlign='top'>\n        <Grid.Column style={{ maxWidth: 350 }}>\n          <Header as='h2' color='orange' textAlign='center'>\n            Omat tiedot\n          </Header>\n          <Segment raised>\n            <div className='my-details-row'>\n              <div className='row-label'>\n                Nimi:\n              </div>\n              <div>\n                {user.name}\n              </div>\n            </div>\n            <div className='my-details-row'>\n              <div className='row-label'>\n                Käyttäjätunnus:\n              </div>\n              <div>\n                {user.username}\n              </div>\n            </div>\n\n            <Divider />\n            <div className='my-details-row'>\n              <div className='my-details-sub-row'>\n                <ChangePwdModal user={user} />\n                <RemoveAccountModal />\n              </div>\n            </div>\n            <Divider />\n\n            <div className='my-details-row'>\n              <div className='row-label'>\n                Ajoneuvot:\n              </div>\n              <VehicleList user={user} users={users} />\n              <div className='my-details-row'>\n                <AddVechicleModal user={user} users={users} />\n              </div>\n            </div>\n            {note ? <Notification /> : null}\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n};\n\nexport default MyDetails;","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport LoginForm from './LoginForm';\nimport NavBar from './NavBar/NavBar';\nimport RegistrationForm from './RegistrationForm/RegistrationForm';\nimport RefuelingList from './RefuelingList/RefuelingList';\nimport MyDetails from './MyDetails/MyDetails';\nimport { setLoggedInUser } from '../reducers/loginReducer';\n\nconst Routes = () => {\n  const user = useSelector(state => state.user);\n  const activePage = useSelector(state => state.navi);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // Set user details if user is found from the local storage.\n    if (Object.keys(user).length === 0) {\n      dispatch(setLoggedInUser());\n    }\n  }, [user, dispatch]);\n\n  return (\n    <div>\n      {\n        // Display navbar only if user is logged in\n        Object.keys(user).length !== 0\n          ? <NavBar userName={user.name} />\n          : null\n      }\n\n      {\n        // Redirect user to login page is not logged in yet.\n        Object.keys(user).length === 0\n          ? <Redirect to='/login' />\n          : <Redirect to={activePage} />\n      }\n\n      <Switch>\n        <Route path='/login'>\n          <LoginForm />\n        </Route>\n        <Route path='/register'>\n          <RegistrationForm />\n        </Route>\n        <Route path='/my-details'>\n          <MyDetails user={user} />\n        </Route>\n        <Route path='/refueling-list'>\n          <RefuelingList user={user} />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport Routes from './Routes';\nimport 'semantic-ui-css/semantic.min.css';\n\nconst App = () => {\n  return (\n    <Routes />\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { store } from './store';\nimport App from './components/App';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}